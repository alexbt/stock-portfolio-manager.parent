<?xml version="1.0" encoding="UTF-8"?>
<yshrink version="0.1">
<!-- parsing C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar -->
<!-- parsing C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar -->
<entrypoints>
	<class name="org.joda.time.base.AbstractPartial" />
	<method signature="int indexOf(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int indexOfSupported(org.joda.time.DurationFieldType)" class="org.joda.time.base.AbstractPartial" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractPartial" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTimeFieldType[] getFieldTypes()" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int[] getValues()" class="org.joda.time.base.AbstractPartial" />
	<method signature="boolean isEqual(org.joda.time.ReadablePartial)" class="org.joda.time.base.AbstractPartial" />
	<method signature="java.lang.String toString(org.joda.time.format.DateTimeFormatter)" class="org.joda.time.base.AbstractPartial" />
	<method signature="boolean isAfter(org.joda.time.ReadablePartial)" class="org.joda.time.base.AbstractPartial" />
	<method signature="boolean isBefore(org.joda.time.ReadablePartial)" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTimeField getField(int)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int hashCode()" class="org.joda.time.base.AbstractPartial" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTimeField[] getFields()" class="org.joda.time.base.AbstractPartial" />
	<method signature="int indexOf(org.joda.time.DurationFieldType)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.base.AbstractPartial" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractPartial" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType(int)" class="org.joda.time.base.AbstractPartial" />
	<method signature="int indexOfSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractPartial" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="int getTwoDigitYear(org.joda.time.ReadablePartial)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="int getTwoDigitYear(long,org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<field name="iType" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<field name="iLenientParse" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<field name="iPivot" class="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear" />
	<class name="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int)" class="org.joda.time.LocalDateTime" />
	<method signature="int getMillisOfDay()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusMonths(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusDays(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property dayOfMonth()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property yearOfEra()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property minuteOfHour()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusMinutes(int)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.LocalDateTime" />
	<method signature="int getValue(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusDays(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withWeekOfWeekyear(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property weekOfWeekyear()" class="org.joda.time.LocalDateTime" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property secondOfMinute()" class="org.joda.time.LocalDateTime" />
	<method signature="int getDayOfYear()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property monthOfYear()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.LocalDateTime" />
	<method signature="int getWeekOfWeekyear()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property year()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withYear(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusYears(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property dayOfYear()" class="org.joda.time.LocalDateTime" />
	<method signature="int getSecondOfMinute()" class="org.joda.time.LocalDateTime" />
	<method signature="int getCenturyOfEra()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDateTime" />
	<method signature="int getWeekyear()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusMillis(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDate toLocalDate()" class="org.joda.time.LocalDateTime" />
	<method signature="int getDayOfWeek()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property millisOfSecond()" class="org.joda.time.LocalDateTime" />
	<method signature="int getHourOfDay()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property weekyear()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusSeconds(int)" class="org.joda.time.LocalDateTime" />
	<method signature="int size()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withMinuteOfHour(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withMillisOfDay(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withSecondOfMinute(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withWeekyear(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withMillisOfSecond(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property centuryOfEra()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minus(org.joda.time.ReadableDuration)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.LocalDateTime" />
	<method signature="int getYearOfEra()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalTime toLocalTime()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime fromDateFields(java.util.Date)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property yearOfCentury()" class="org.joda.time.LocalDateTime" />
	<method signature="int getEra()" class="org.joda.time.LocalDateTime" />
	<method signature="int getYear()" class="org.joda.time.LocalDateTime" />
	<method signature="int getMillisOfSecond()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusWeeks(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withCenturyOfEra(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusMonths(int)" class="org.joda.time.LocalDateTime" />
	<method signature="int getMinuteOfHour()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withFields(org.joda.time.ReadablePartial)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property millisOfDay()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withHourOfDay(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withMonthOfYear(int)" class="org.joda.time.LocalDateTime" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.LocalDateTime" />
	<method signature="int getYearOfCentury()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withEra(int)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.LocalDateTime" />
	<method signature="int getDayOfMonth()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property hourOfDay()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withDate(int,int,int)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withDurationAdded(org.joda.time.ReadableDuration,int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime fromCalendarFields(java.util.Calendar)" class="org.joda.time.LocalDateTime" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.LocalDateTime" />
	<method signature="int getMonthOfYear()" class="org.joda.time.LocalDateTime" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.LocalDateTime" />
	<method signature="java.lang.String toString()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.DateTime toDateTime()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withYearOfEra(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusWeeks(int)" class="org.joda.time.LocalDateTime" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusHours(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withYearOfCentury(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusMinutes(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusYears(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withTime(int,int,int,int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.LocalDateTime" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plusSeconds(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withDayOfYear(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withDayOfMonth(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withDayOfWeek(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime withLocalMillis(long)" class="org.joda.time.LocalDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime plus(org.joda.time.ReadableDuration)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusHours(int)" class="org.joda.time.LocalDateTime" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property era()" class="org.joda.time.LocalDateTime" />
	<method signature="long getLocalMillis()" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime minusMillis(int)" class="org.joda.time.LocalDateTime" />
	<method signature="org.joda.time.LocalDateTime$Property dayOfWeek()" class="org.joda.time.LocalDateTime" />
	<field name="iChronology" class="org.joda.time.LocalDateTime" />
	<field name="YEAR" class="org.joda.time.LocalDateTime" />
	<field name="MONTH_OF_YEAR" class="org.joda.time.LocalDateTime" />
	<field name="serialVersionUID" class="org.joda.time.LocalDateTime" />
	<field name="iLocalMillis" class="org.joda.time.LocalDateTime" />
	<field name="DAY_OF_MONTH" class="org.joda.time.LocalDateTime" />
	<field name="MILLIS_OF_DAY" class="org.joda.time.LocalDateTime" />
	<class name="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="org.joda.time.ReadablePartial getReadablePartial()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int get()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMaximumValueOverall()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int compareTo(org.joda.time.ReadablePartial)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMinimumValueOverall()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getAsText()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getAsText(java.util.Locale)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int compareTo(org.joda.time.ReadableInstant)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getAsShortText()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getAsShortText(java.util.Locale)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="java.lang.String getAsString()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="int hashCode()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.field.AbstractPartialFieldProperty" />
	<class name="org.joda.time.field.DelegatedDurationField" />
	<method signature="org.joda.time.DurationFieldType getType()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="org.joda.time.DurationField getWrappedField()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="int getValue(long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField,org.joda.time.DurationFieldType)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.field.DelegatedDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.DelegatedDurationField" />
	<field name="iField" class="org.joda.time.field.DelegatedDurationField" />
	<field name="iType" class="org.joda.time.field.DelegatedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.DelegatedDurationField" />
	<class name="org.joda.time.Months" />
	<method signature="org.joda.time.Months plus(int)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months minus(int)" class="org.joda.time.Months" />
	<method signature="java.lang.String toString()" class="org.joda.time.Months" />
	<method signature="boolean isLessThan(org.joda.time.Months)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months minus(org.joda.time.Months)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months monthsIn(org.joda.time.ReadableInterval)" class="org.joda.time.Months" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months plus(org.joda.time.Months)" class="org.joda.time.Months" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Months" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months negated()" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months dividedBy(int)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months multipliedBy(int)" class="org.joda.time.Months" />
	<method signature="boolean isGreaterThan(org.joda.time.Months)" class="org.joda.time.Months" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months months(int)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months monthsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Months" />
	<method signature="org.joda.time.Months parseMonths(java.lang.String)" class="org.joda.time.Months" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Months" />
	<method signature="int getMonths()" class="org.joda.time.Months" />
	<field name="FOUR" class="org.joda.time.Months" />
	<field name="FIVE" class="org.joda.time.Months" />
	<field name="TWELVE" class="org.joda.time.Months" />
	<field name="TEN" class="org.joda.time.Months" />
	<field name="SEVEN" class="org.joda.time.Months" />
	<field name="NINE" class="org.joda.time.Months" />
	<field name="ELEVEN" class="org.joda.time.Months" />
	<field name="MAX_VALUE" class="org.joda.time.Months" />
	<field name="ONE" class="org.joda.time.Months" />
	<field name="TWO" class="org.joda.time.Months" />
	<field name="THREE" class="org.joda.time.Months" />
	<field name="serialVersionUID" class="org.joda.time.Months" />
	<field name="PARSER" class="org.joda.time.Months" />
	<field name="SIX" class="org.joda.time.Months" />
	<field name="MIN_VALUE" class="org.joda.time.Months" />
	<field name="ZERO" class="org.joda.time.Months" />
	<field name="EIGHT" class="org.joda.time.Months" />
	<class name="org.joda.time.chrono.GJChronology" />
	<method signature="long gregorianToJulianByWeekyear(long)" class="org.joda.time.chrono.GJChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,long,int)" class="org.joda.time.chrono.GJChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJChronology" />
	<method signature="long julianToGregorianByYear(long)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long access$000(org.joda.time.chrono.GJChronology)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstance()" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.Instant getGregorianCutover()" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.GJChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.GJChronology" />
	<method signature="int getMinimumDaysInFirstWeek()" class="org.joda.time.chrono.GJChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.chrono.GJChronology getInstanceUTC()" class="org.joda.time.chrono.GJChronology" />
	<method signature="long convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long convertByYear(long,org.joda.time.Chronology,org.joda.time.Chronology)" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.chrono.GJChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long gregorianToJulianByYear(long)" class="org.joda.time.chrono.GJChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.GJChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.GJChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.GJChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.GJChronology" />
	<method signature="long julianToGregorianByWeekyear(long)" class="org.joda.time.chrono.GJChronology" />
	<field name="iCutoverInstant" class="org.joda.time.chrono.GJChronology" />
	<field name="cCache" class="org.joda.time.chrono.GJChronology" />
	<field name="iGapDuration" class="org.joda.time.chrono.GJChronology" />
	<field name="DEFAULT_CUTOVER" class="org.joda.time.chrono.GJChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJChronology" />
	<field name="iCutoverMillis" class="org.joda.time.chrono.GJChronology" />
	<field name="iGregorianChronology" class="org.joda.time.chrono.GJChronology" />
	<field name="iJulianChronology" class="org.joda.time.chrono.GJChronology" />
	<class name="org.joda.time.base.AbstractDuration" />
	<method signature="java.lang.String toString()" class="org.joda.time.base.AbstractDuration" />
	<method signature="boolean isEqual(org.joda.time.ReadableDuration)" class="org.joda.time.base.AbstractDuration" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.base.AbstractDuration" />
	<method signature="org.joda.time.Duration toDuration()" class="org.joda.time.base.AbstractDuration" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractDuration" />
	<method signature="boolean isShorterThan(org.joda.time.ReadableDuration)" class="org.joda.time.base.AbstractDuration" />
	<method signature="int hashCode()" class="org.joda.time.base.AbstractDuration" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.AbstractDuration" />
	<method signature="boolean isLongerThan(org.joda.time.ReadableDuration)" class="org.joda.time.base.AbstractDuration" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.base.AbstractDuration" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractDuration" />
	<class name="org.joda.time.base.BaseLocal" />
	<method signature="long getLocalMillis()" class="org.joda.time.base.BaseLocal" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BaseLocal" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.BaseLocal" />
	<field name="serialVersionUID" class="org.joda.time.base.BaseLocal" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="long previousTransition(long)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="long nextTransition(long)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone readFrom(java.io.DataInput,java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="void &lt;init&gt;(java.lang.String,long[],int[],int[],java.lang.String[],org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="boolean isFixed()" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="void writeTo(java.io.DataOutput)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="int getOffset(long)" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<method signature="boolean isCachable()" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="iWallOffsets" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="iNameKeys" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="iStandardOffsets" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="serialVersionUID" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="iTailZone" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<field name="iTransitions" class="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone" />
	<class name="org.joda.time.field.BaseDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int[] addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int convertText(java.lang.String,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long set(long,java.lang.String)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsShortText(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsText(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="org.joda.time.DateTimeFieldType getType()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.BaseDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.field.BaseDateTimeField" />
	<field name="iType" class="org.joda.time.field.BaseDateTimeField" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<method signature="int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<field name="iText" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<field name="EMPTY" class="org.joda.time.format.PeriodFormatterBuilder$Literal" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<method signature="int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iText" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iAfterParser" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iAfterPrinter" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iBeforePrinter" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iUseBefore" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iBeforeParser" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iParsedForms" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iFinalText" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<field name="iUseAfter" class="org.joda.time.format.PeriodFormatterBuilder$Separator" />
	<class name="org.joda.time.format.DateTimeParser" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeParser" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeParser" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeParser" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="void &lt;init&gt;(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="void &lt;init&gt;(long,java.lang.String,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="boolean isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="int getStandardOffset()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="java.lang.String getNameKey()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="int getSaveMillis()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="void &lt;init&gt;(long,org.joda.time.tz.DateTimeZoneBuilder$Transition)" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="long getMillis()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<method signature="int getWallOffset()" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<field name="iStandardOffset" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<field name="iNameKey" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<field name="iWallOffset" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<field name="iMillis" class="org.joda.time.tz.DateTimeZoneBuilder$Transition" />
	<class name="org.joda.time.convert.DurationConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.DurationConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.DurationConverter" />
	<class name="org.joda.time.format.FormatUtils" />
	<method signature="java.lang.String createErrorMessage(java.lang.String,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void appendUnpaddedInteger(java.lang.StringBuffer,long)" class="org.joda.time.format.FormatUtils" />
	<method signature="void appendPaddedInteger(java.lang.StringBuffer,int,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.FormatUtils" />
	<method signature="void appendPaddedInteger(java.lang.StringBuffer,long,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void writePaddedInteger(java.io.Writer,long,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void writeUnpaddedInteger(java.io.Writer,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="int parseTwoDigits(java.lang.String,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void writePaddedInteger(java.io.Writer,int,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="void appendUnpaddedInteger(java.lang.StringBuffer,int)" class="org.joda.time.format.FormatUtils" />
	<method signature="int calculateDigitCount(long)" class="org.joda.time.format.FormatUtils" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.FormatUtils" />
	<method signature="void writeUnpaddedInteger(java.io.Writer,long)" class="org.joda.time.format.FormatUtils" />
	<field name="LOG_10" class="org.joda.time.format.FormatUtils" />
	<class name="org.joda.time.field.PreciseDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="int getRange()" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)" class="org.joda.time.field.PreciseDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.PreciseDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.PreciseDateTimeField" />
	<field name="iRangeField" class="org.joda.time.field.PreciseDateTimeField" />
	<field name="iRange" class="org.joda.time.field.PreciseDateTimeField" />
	<class name="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.ReadablePartialConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ReadablePartialConverter" />
	<field name="class$org$joda$time$ReadablePartial" class="org.joda.time.convert.ReadablePartialConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.ReadablePartialConverter" />
	<class name="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void prependMessage(java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="org.joda.time.DurationFieldType getDurationFieldType()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String getIllegalStringValue()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String createMessage(java.lang.String,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationFieldType,java.lang.Number,java.lang.Number,java.lang.Number)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.Number getIllegalNumberValue()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.Number,java.lang.Number)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String getIllegalValueAsString()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String getFieldName()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.Number getUpperBound()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationFieldType,java.lang.String)" class="org.joda.time.IllegalFieldValueException" />
	<method signature="org.joda.time.DateTimeFieldType getDateTimeFieldType()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.Number getLowerBound()" class="org.joda.time.IllegalFieldValueException" />
	<method signature="java.lang.String getMessage()" class="org.joda.time.IllegalFieldValueException" />
	<field name="iLowerBound" class="org.joda.time.IllegalFieldValueException" />
	<field name="iStringValue" class="org.joda.time.IllegalFieldValueException" />
	<field name="iDurationFieldType" class="org.joda.time.IllegalFieldValueException" />
	<field name="iDateTimeFieldType" class="org.joda.time.IllegalFieldValueException" />
	<field name="serialVersionUID" class="org.joda.time.IllegalFieldValueException" />
	<field name="iMessage" class="org.joda.time.IllegalFieldValueException" />
	<field name="iUpperBound" class="org.joda.time.IllegalFieldValueException" />
	<field name="iNumberValue" class="org.joda.time.IllegalFieldValueException" />
	<field name="iFieldName" class="org.joda.time.IllegalFieldValueException" />
	<class name="org.joda.time.convert.ConverterManager" />
	<method signature="java.lang.String toString()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PartialConverter getPartialConverter(java.lang.Object)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.ConverterManager getInstance()" class="org.joda.time.convert.ConverterManager" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ConverterManager" />
	<method signature="void checkAlterInstantConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PartialConverter addPartialConverter(org.joda.time.convert.PartialConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.DurationConverter addDurationConverter(org.joda.time.convert.DurationConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.DurationConverter getDurationConverter(java.lang.Object)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.InstantConverter[] getInstantConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PeriodConverter removePeriodConverter(org.joda.time.convert.PeriodConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.InstantConverter addInstantConverter(org.joda.time.convert.InstantConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.DurationConverter[] getDurationConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PeriodConverter getPeriodConverter(java.lang.Object)" class="org.joda.time.convert.ConverterManager" />
	<method signature="void checkAlterPeriodConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PeriodConverter[] getPeriodConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PartialConverter[] getPartialConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.IntervalConverter getIntervalConverter(java.lang.Object)" class="org.joda.time.convert.ConverterManager" />
	<method signature="void checkAlterPartialConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.IntervalConverter removeIntervalConverter(org.joda.time.convert.IntervalConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="void checkAlterIntervalConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.InstantConverter removeInstantConverter(org.joda.time.convert.InstantConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PartialConverter removePartialConverter(org.joda.time.convert.PartialConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.IntervalConverter addIntervalConverter(org.joda.time.convert.IntervalConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.IntervalConverter[] getIntervalConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.PeriodConverter addPeriodConverter(org.joda.time.convert.PeriodConverter)" class="org.joda.time.convert.ConverterManager" />
	<method signature="void checkAlterDurationConverters()" class="org.joda.time.convert.ConverterManager" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ConverterManager" />
	<method signature="org.joda.time.convert.DurationConverter removeDurationConverter(org.joda.time.convert.DurationConverter)" class="org.joda.time.convert.ConverterManager" />
	<field name="iIntervalConverters" class="org.joda.time.convert.ConverterManager" />
	<field name="iDurationConverters" class="org.joda.time.convert.ConverterManager" />
	<field name="iInstantConverters" class="org.joda.time.convert.ConverterManager" />
	<field name="iPartialConverters" class="org.joda.time.convert.ConverterManager" />
	<field name="INSTANCE" class="org.joda.time.convert.ConverterManager" />
	<field name="iPeriodConverters" class="org.joda.time.convert.ConverterManager" />
	<class name="org.joda.time.convert.NullConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.NullConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.NullConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.NullConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.NullConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.NullConverter" />
	<method signature="void setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.NullConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.NullConverter" />
	<class name="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateMidnight toDateMidnight()" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withYear(int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay plusYears(int)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay$Property dayOfMonth()" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay fromCalendarFields(java.util.Calendar)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay minusYears(int)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTimeAtMidnight(org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="int getDayOfMonth()" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(org.joda.time.YearMonthDay,int[])" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTimeFieldType[] getFieldTypes()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withDayOfMonth(int)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(int,int,int,org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTimeAtMidnight()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay$Property year()" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(org.joda.time.YearMonthDay,org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay$Property monthOfYear()" class="org.joda.time.YearMonthDay" />
	<method signature="int getMonthOfYear()" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay plusMonths(int)" class="org.joda.time.YearMonthDay" />
	<method signature="java.lang.String toString()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay minusMonths(int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withChronologyRetainFields(org.joda.time.Chronology)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay minus(org.joda.time.ReadablePeriod)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay plus(org.joda.time.ReadablePeriod)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withMonthOfYear(int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.LocalDate toLocalDate()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateMidnight toDateMidnight(org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay minusDays(int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.Interval toInterval(org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay fromDateFields(java.util.Date)" class="org.joda.time.YearMonthDay" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.YearMonthDay" />
	<method signature="int size()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.YearMonthDay plusDays(int)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.TimeOfDay)" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTime toDateTimeAtCurrentTime()" class="org.joda.time.YearMonthDay" />
	<method signature="int getYear()" class="org.joda.time.YearMonthDay" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType(int)" class="org.joda.time.YearMonthDay" />
	<field name="YEAR" class="org.joda.time.YearMonthDay" />
	<field name="MONTH_OF_YEAR" class="org.joda.time.YearMonthDay" />
	<field name="FIELD_TYPES" class="org.joda.time.YearMonthDay" />
	<field name="serialVersionUID" class="org.joda.time.YearMonthDay" />
	<field name="DAY_OF_MONTH" class="org.joda.time.YearMonthDay" />
	<class name="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationField getField(org.joda.time.Chronology)" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType months()" class="org.joda.time.DurationFieldType" />
	<method signature="java.lang.String toString()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType eras()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType seconds()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType days()" class="org.joda.time.DurationFieldType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType years()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType halfdays()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType centuries()" class="org.joda.time.DurationFieldType" />
	<method signature="java.lang.String getName()" class="org.joda.time.DurationFieldType" />
	<method signature="boolean isSupported(org.joda.time.Chronology)" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType minutes()" class="org.joda.time.DurationFieldType" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType hours()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType weekyears()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType weeks()" class="org.joda.time.DurationFieldType" />
	<method signature="org.joda.time.DurationFieldType millis()" class="org.joda.time.DurationFieldType" />
	<field name="ERAS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="MILLIS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="SECONDS" class="org.joda.time.DurationFieldType" />
	<field name="YEARS" class="org.joda.time.DurationFieldType" />
	<field name="ERAS" class="org.joda.time.DurationFieldType" />
	<field name="serialVersionUID" class="org.joda.time.DurationFieldType" />
	<field name="iName" class="org.joda.time.DurationFieldType" />
	<field name="DAYS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="HOURS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="MINUTES" class="org.joda.time.DurationFieldType" />
	<field name="DAYS" class="org.joda.time.DurationFieldType" />
	<field name="HALFDAYS" class="org.joda.time.DurationFieldType" />
	<field name="WEEKYEARS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="WEEKS" class="org.joda.time.DurationFieldType" />
	<field name="MONTHS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="SECONDS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="MONTHS" class="org.joda.time.DurationFieldType" />
	<field name="HALFDAYS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="CENTURIES_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="CENTURIES" class="org.joda.time.DurationFieldType" />
	<field name="MINUTES_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="MILLIS" class="org.joda.time.DurationFieldType" />
	<field name="WEEKYEARS" class="org.joda.time.DurationFieldType" />
	<field name="WEEKS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="YEARS_TYPE" class="org.joda.time.DurationFieldType" />
	<field name="HOURS" class="org.joda.time.DurationFieldType" />
	<class name="org.joda.time.MutableInterval" />
	<method signature="void setChronology(org.joda.time.Chronology)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.MutableInterval" />
	<method signature="void setDurationAfterStart(long)" class="org.joda.time.MutableInterval" />
	<method signature="void setStartMillis(long)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.MutableInterval" />
	<method signature="org.joda.time.MutableInterval copy()" class="org.joda.time.MutableInterval" />
	<method signature="void setEnd(org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="void setInterval(long,long)" class="org.joda.time.MutableInterval" />
	<method signature="void setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.Chronology)" class="org.joda.time.MutableInterval" />
	<method signature="void setEndMillis(long)" class="org.joda.time.MutableInterval" />
	<method signature="void setDurationBeforeEnd(long)" class="org.joda.time.MutableInterval" />
	<method signature="void setPeriodBeforeEnd(org.joda.time.ReadablePeriod)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.MutableInterval" />
	<method signature="void setPeriodAfterStart(org.joda.time.ReadablePeriod)" class="org.joda.time.MutableInterval" />
	<method signature="void setInterval(org.joda.time.ReadableInterval)" class="org.joda.time.MutableInterval" />
	<method signature="void setDurationAfterStart(org.joda.time.ReadableDuration)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="java.lang.Object clone()" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)" class="org.joda.time.MutableInterval" />
	<method signature="void setStart(org.joda.time.ReadableInstant)" class="org.joda.time.MutableInterval" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.MutableInterval" />
	<method signature="void setDurationBeforeEnd(org.joda.time.ReadableDuration)" class="org.joda.time.MutableInterval" />
	<field name="serialVersionUID" class="org.joda.time.MutableInterval" />
	<class name="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight roundHalfEvenCopy()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight setCopy(java.lang.String)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight roundHalfCeilingCopy()" class="org.joda.time.DateMidnight$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight roundHalfFloorCopy()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight addToCopy(int)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight roundCeilingCopy()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight addWrapFieldToCopy(int)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight setCopy(int)" class="org.joda.time.DateMidnight$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight addToCopy(long)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight withMinimumValue()" class="org.joda.time.DateMidnight$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight withMaximumValue()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight getDateMidnight()" class="org.joda.time.DateMidnight$Property" />
	<method signature="org.joda.time.DateMidnight roundFloorCopy()" class="org.joda.time.DateMidnight$Property" />
	<method signature="long getMillis()" class="org.joda.time.DateMidnight$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.DateMidnight,org.joda.time.DateTimeField)" class="org.joda.time.DateMidnight$Property" />
	<field name="iInstant" class="org.joda.time.DateMidnight$Property" />
	<field name="iField" class="org.joda.time.DateMidnight$Property" />
	<field name="serialVersionUID" class="org.joda.time.DateMidnight$Property" />
	<class name="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateMidnight toDateMidnight()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate plus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate minus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate plusWeeks(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property centuryOfEra()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property era()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withCenturyOfEra(int)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate plusMonths(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate minusMonths(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property yearOfCentury()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate minusDays(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.LocalTime)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property dayOfWeek()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtStartOfDay()" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withMonthOfYear(int)" class="org.joda.time.LocalDate" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withEra(int)" class="org.joda.time.LocalDate" />
	<method signature="int getYearOfCentury()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property dayOfYear()" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtMidnight(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="int getDayOfMonth()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(int,int,int,org.joda.time.Chronology)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtMidnight()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withFields(org.joda.time.ReadablePartial)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property weekyear()" class="org.joda.time.LocalDate" />
	<method signature="int getValue(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withWeekOfWeekyear(int)" class="org.joda.time.LocalDate" />
	<method signature="int getMonthOfYear()" class="org.joda.time.LocalDate" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate plusDays(int)" class="org.joda.time.LocalDate" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.LocalDate" />
	<method signature="int getDayOfYear()" class="org.joda.time.LocalDate" />
	<method signature="int getWeekOfWeekyear()" class="org.joda.time.LocalDate" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.LocalDate" />
	<method signature="java.lang.String toString()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withYear(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate plusYears(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withYearOfEra(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate minusWeeks(int)" class="org.joda.time.LocalDate" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withYearOfCentury(int)" class="org.joda.time.LocalDate" />
	<method signature="int getCenturyOfEra()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property weekOfWeekyear()" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property monthOfYear()" class="org.joda.time.LocalDate" />
	<method signature="int getWeekyear()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property year()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateMidnight toDateMidnight(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate minusYears(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.Interval toInterval(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="int getDayOfWeek()" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.LocalDate" />
	<method signature="int size()" class="org.joda.time.LocalDate" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withDayOfWeek(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withDayOfMonth(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withDayOfYear(int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate fromCalendarFields(java.util.Calendar)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDateTime toLocalDateTime(org.joda.time.LocalTime)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withWeekyear(int)" class="org.joda.time.LocalDate" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDate" />
	<method signature="long getLocalMillis()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.LocalDate" />
	<method signature="int getYearOfEra()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate withLocalMillis(long)" class="org.joda.time.LocalDate" />
	<method signature="int getEra()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property dayOfMonth()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate fromDateFields(java.util.Date)" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.DateTime toDateTimeAtCurrentTime()" class="org.joda.time.LocalDate" />
	<method signature="org.joda.time.LocalDate$Property yearOfEra()" class="org.joda.time.LocalDate" />
	<method signature="int getYear()" class="org.joda.time.LocalDate" />
	<field name="DATE_DURATION_TYPES" class="org.joda.time.LocalDate" />
	<field name="iChronology" class="org.joda.time.LocalDate" />
	<field name="YEAR" class="org.joda.time.LocalDate" />
	<field name="MONTH_OF_YEAR" class="org.joda.time.LocalDate" />
	<field name="serialVersionUID" class="org.joda.time.LocalDate" />
	<field name="iLocalMillis" class="org.joda.time.LocalDate" />
	<field name="DAY_OF_MONTH" class="org.joda.time.LocalDate" />
	<class name="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime roundHalfEven()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime getMutableDateTime()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime roundFloor()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime add(long)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime roundHalfFloor()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime set(java.lang.String)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime roundHalfCeiling()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime add(int)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime set(java.lang.String,java.util.Locale)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime addWrapField(int)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime set(int)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="org.joda.time.MutableDateTime roundCeiling()" class="org.joda.time.MutableDateTime$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.MutableDateTime,org.joda.time.DateTimeField)" class="org.joda.time.MutableDateTime$Property" />
	<method signature="long getMillis()" class="org.joda.time.MutableDateTime$Property" />
	<field name="iInstant" class="org.joda.time.MutableDateTime$Property" />
	<field name="iField" class="org.joda.time.MutableDateTime$Property" />
	<field name="serialVersionUID" class="org.joda.time.MutableDateTime$Property" />
	<class name="org.joda.time.JodaTimePermission" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.JodaTimePermission" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.JodaTimePermission" />
	<field name="serialVersionUID" class="org.joda.time.JodaTimePermission" />
	<class name="org.joda.time.chrono.GregorianChronology" />
	<method signature="long getAverageMillisPerYearDividedByTwo()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="long getAverageMillisPerYear()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.chrono.GregorianChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.chrono.GregorianChronology getInstance(org.joda.time.DateTimeZone,int)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.chrono.GregorianChronology getInstance()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.chrono.GregorianChronology getInstanceUTC()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="long getAverageMillisPerMonth()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.GregorianChronology" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.GregorianChronology" />
	<field name="MILLIS_PER_MONTH" class="org.joda.time.chrono.GregorianChronology" />
	<field name="MIN_YEAR" class="org.joda.time.chrono.GregorianChronology" />
	<field name="cCache" class="org.joda.time.chrono.GregorianChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.GregorianChronology" />
	<field name="MILLIS_PER_YEAR" class="org.joda.time.chrono.GregorianChronology" />
	<field name="MAX_YEAR" class="org.joda.time.chrono.GregorianChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GregorianChronology" />
	<field name="DAYS_0000_TO_1970" class="org.joda.time.chrono.GregorianChronology" />
	<class name="org.joda.time.format.ISOPeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter alternateExtendedWithWeeks()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter standard()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter alternateExtended()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter alternate()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.ISOPeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter alternateWithWeeks()" class="org.joda.time.format.ISOPeriodFormat" />
	<field name="cAlternateExtendedWihWeeks" class="org.joda.time.format.ISOPeriodFormat" />
	<field name="cAlternateWithWeeks" class="org.joda.time.format.ISOPeriodFormat" />
	<field name="cAlternateExtended" class="org.joda.time.format.ISOPeriodFormat" />
	<field name="cStandard" class="org.joda.time.format.ISOPeriodFormat" />
	<field name="cAlternate" class="org.joda.time.format.ISOPeriodFormat" />
	<class name="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.chrono.BasicChronology)" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJYearOfEraDateTimeField" />
	<class name="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Interval toIntervalFrom(org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseDuration" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.base.BaseDuration" />
	<method signature="void setMillis(long)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriod(org.joda.time.PeriodType)" class="org.joda.time.base.BaseDuration" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseDuration" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BaseDuration" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Interval toIntervalTo(org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriod(org.joda.time.Chronology)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriodFrom(org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriod(org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriodFrom(org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.base.BaseDuration" />
	<method signature="long getMillis()" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriodTo(org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.base.BaseDuration" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.base.BaseDuration" />
	<method signature="org.joda.time.Period toPeriodTo(org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseDuration" />
	<field name="serialVersionUID" class="org.joda.time.base.BaseDuration" />
	<field name="iMillis" class="org.joda.time.base.BaseDuration" />
	<class name="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField months()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField seconds()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField dayOfYear()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField days()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField years()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="java.lang.Object getParam()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField minutes()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField secondOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="long getDateTimeMillis(long,int,int,int,int)" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField weekyear()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.Chronology getBase()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField hours()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField millisOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField millisOfSecond()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField yearOfEra()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField minuteOfHour()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField weeks()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField millis()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField dayOfMonth()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField centuryOfEra()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField era()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField eras()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField hourOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField centuries()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField halfdays()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField monthOfYear()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField minuteOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField year()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfHalfday()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField yearOfCentury()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField hourOfHalfday()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField halfdayOfDay()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DurationField weekyears()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField weekOfWeekyear()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField dayOfWeek()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField secondOfMinute()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="org.joda.time.DateTimeField weekyearOfCentury()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="void setFields()" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object)" class="org.joda.time.chrono.AssembledChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMinuteOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iYearOfEra" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMonthOfYear" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iClockhourOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iEras" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iHourOfHalfday" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iHourOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iEra" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMinutes" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iYear" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iDayOfMonth" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMillis" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iWeekOfWeekyear" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMillisOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iSecondOfMinute" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iWeekyear" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iHours" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iBaseFlags" class="org.joda.time.chrono.AssembledChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMonths" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iYearOfCentury" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iHalfdayOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iHalfdays" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iCenturyOfEra" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iSecondOfDay" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMillisOfSecond" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iWeeks" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iWeekyears" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iCenturies" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iYears" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iMinuteOfHour" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iSeconds" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iDays" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iWeekyearOfCentury" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iParam" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iBase" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iDayOfWeek" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iDayOfYear" class="org.joda.time.chrono.AssembledChronology" />
	<field name="iClockhourOfHalfday" class="org.joda.time.chrono.AssembledChronology" />
	<class name="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void &lt;init&gt;(java.lang.String,java.util.StringTokenizer)" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void &lt;init&gt;(java.util.StringTokenizer)" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="java.lang.String toString()" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void chain(java.util.StringTokenizer)" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<method signature="void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iNext" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iUntilYear" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iOffsetMillis" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iUntilDateTimeOfYear" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iName" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iFormat" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<field name="iRules" class="org.joda.time.tz.ZoneInfoCompiler$Zone" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,boolean,int)" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<field name="iMinPrintedDigits" class="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber" />
	<class name="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int standardPeriodIn(org.joda.time.ReadablePeriod,long)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="org.joda.time.DurationFieldType getFieldType(int)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int getValue()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int get(org.joda.time.DurationFieldType)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int getValue(int)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int hashCode()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="void setValue(int)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="org.joda.time.MutablePeriod toMutablePeriod()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<method signature="int size()" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<field name="iPeriod" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<field name="serialVersionUID" class="org.joda.time.base.BaseSingleFieldPeriod" />
	<class name="org.joda.time.ReadablePartial" />
	<method signature="java.lang.String toString()" class="org.joda.time.ReadablePartial" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.ReadablePartial" />
	<method signature="int getValue(int)" class="org.joda.time.ReadablePartial" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadablePartial" />
	<method signature="org.joda.time.DateTimeField getField(int)" class="org.joda.time.ReadablePartial" />
	<method signature="int hashCode()" class="org.joda.time.ReadablePartial" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.ReadablePartial" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.ReadableInstant)" class="org.joda.time.ReadablePartial" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.ReadablePartial" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.ReadablePartial" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType(int)" class="org.joda.time.ReadablePartial" />
	<method signature="int size()" class="org.joda.time.ReadablePartial" />
	<class name="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="org.joda.time.DurationFieldType getDurationType()" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="org.joda.time.DurationFieldType getRangeDurationType()" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="void &lt;init&gt;(java.lang.String,byte,org.joda.time.DurationFieldType,org.joda.time.DurationFieldType)" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<method signature="org.joda.time.DateTimeField getField(org.joda.time.Chronology)" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<field name="iOrdinal" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<field name="iUnitType" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<field name="serialVersionUID" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<field name="iRangeType" class="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType" />
	<class name="org.joda.time.convert.LongConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.LongConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.LongConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.LongConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.LongConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.LongConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.LongConverter" />
	<field name="class$java$lang$Long" class="org.joda.time.convert.LongConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.LongConverter" />
	<class name="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay plus(org.joda.time.ReadablePeriod)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay minus(org.joda.time.ReadablePeriod)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(org.joda.time.TimeOfDay,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="int getMinuteOfHour()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay$Property minuteOfHour()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.DateTime toDateTimeToday(org.joda.time.DateTimeZone)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay plusMinutes(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.DateTime toDateTimeToday()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withChronologyRetainFields(org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay$Property secondOfMinute()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withHourOfDay(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay fromDateFields(java.util.Date)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay fromMillisOfDay(long)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.DateTimeFieldType[] getFieldTypes()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(org.joda.time.TimeOfDay,int[])" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int,int,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay$Property hourOfDay()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay$Property millisOfSecond()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay minusMillis(int)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="java.lang.String toString()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay fromMillisOfDay(long,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="int getSecondOfMinute()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withSecondOfMinute(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withMillisOfSecond(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay minusHours(int)" class="org.joda.time.TimeOfDay" />
	<method signature="int getHourOfDay()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay plusSeconds(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withMinuteOfHour(int)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.TimeOfDay" />
	<method signature="int size()" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay fromCalendarFields(java.util.Calendar)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay minusSeconds(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay plusHours(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay minusMinutes(int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay plusMillis(int)" class="org.joda.time.TimeOfDay" />
	<method signature="void &lt;init&gt;(int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.LocalTime toLocalTime()" class="org.joda.time.TimeOfDay" />
	<method signature="int getMillisOfSecond()" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.TimeOfDay withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.TimeOfDay" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType(int)" class="org.joda.time.TimeOfDay" />
	<field name="MIDNIGHT" class="org.joda.time.TimeOfDay" />
	<field name="MILLIS_OF_SECOND" class="org.joda.time.TimeOfDay" />
	<field name="MINUTE_OF_HOUR" class="org.joda.time.TimeOfDay" />
	<field name="FIELD_TYPES" class="org.joda.time.TimeOfDay" />
	<field name="serialVersionUID" class="org.joda.time.TimeOfDay" />
	<field name="SECOND_OF_MINUTE" class="org.joda.time.TimeOfDay" />
	<field name="HOUR_OF_DAY" class="org.joda.time.TimeOfDay" />
	<class name="org.joda.time.DateTimeUtils$SystemMillisProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeUtils$SystemMillisProvider" />
	<method signature="long getMillis()" class="org.joda.time.DateTimeUtils$SystemMillisProvider" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeUtils$SystemMillisProvider" />
	<class name="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="org.joda.time.DateTimeField getWrappedField()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.DecoratedDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.DecoratedDateTimeField" />
	<field name="iField" class="org.joda.time.field.DecoratedDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.DecoratedDateTimeField" />
	<class name="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="void &lt;init&gt;(java.util.StringTokenizer)" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="java.lang.String toString()" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="void addCutover(org.joda.time.tz.DateTimeZoneBuilder,int)" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="void addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String,int,int,int)" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iMonthOfYear" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iMillisOfDay" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iZoneChar" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iDayOfWeek" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iAdvanceDayOfWeek" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<field name="iDayOfMonth" class="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long next(long,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long setDayOfWeek(org.joda.time.Chronology,long)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long previous(long,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="void &lt;init&gt;(char,int,int,int,boolean,int)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long setInstant(int,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long setDayOfMonthPrevious(org.joda.time.Chronology,long)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="void writeTo(java.io.DataOutput)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long setDayOfMonthNext(org.joda.time.Chronology,long)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="long setDayOfMonth(org.joda.time.Chronology,long)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$OfYear readFrom(java.io.DataInput)" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iMonthOfYear" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iMillisOfDay" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iAdvance" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iMode" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iDayOfWeek" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<field name="iDayOfMonth" class="org.joda.time.tz.DateTimeZoneBuilder$OfYear" />
	<class name="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate roundHalfFloorCopy()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate roundCeilingCopy()" class="org.joda.time.LocalDate$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate roundHalfEvenCopy()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate setCopy(int)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate addWrapFieldToCopy(int)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate roundHalfCeilingCopy()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate withMaximumValue()" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate roundFloorCopy()" class="org.joda.time.LocalDate$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate setCopy(java.lang.String)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate addToCopy(int)" class="org.joda.time.LocalDate$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate getLocalDate()" class="org.joda.time.LocalDate$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.LocalDate,org.joda.time.DateTimeField)" class="org.joda.time.LocalDate$Property" />
	<method signature="org.joda.time.LocalDate withMinimumValue()" class="org.joda.time.LocalDate$Property" />
	<method signature="long getMillis()" class="org.joda.time.LocalDate$Property" />
	<field name="iInstant" class="org.joda.time.LocalDate$Property" />
	<field name="iField" class="org.joda.time.LocalDate$Property" />
	<field name="serialVersionUID" class="org.joda.time.LocalDate$Property" />
	<class name="org.joda.time.chrono.LimitChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.DateTime getLowerLimit()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.DateTime getUpperLimit()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTime,org.joda.time.DateTime)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="long getDateTimeMillis(long,int,int,int,int)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.DurationField convertField(org.joda.time.DurationField,java.util.HashMap)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField,java.util.HashMap)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="void checkLimits(long,java.lang.String)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.LimitChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.LimitChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.LimitChronology" />
	<field name="iLowerLimit" class="org.joda.time.chrono.LimitChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.LimitChronology" />
	<field name="iWithUTC" class="org.joda.time.chrono.LimitChronology" />
	<field name="iUpperLimit" class="org.joda.time.chrono.LimitChronology" />
	<class name="org.joda.time.chrono.BasicChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getYearMonthDayMillis(int,int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long setYear(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInYearMax()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getTotalMillisByYearMonth(int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMillisOfDay(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInYear(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getFirstWeekOfYearMillis(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInYearMonth(int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMinimumDaysInFirstWeek()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfYear(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getDateMidnightMillis(int,int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getWeekOfWeekyear(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMonthOfYear(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfMonth(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getAverageMillisPerMonth()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMaxMonth(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getYearMillis(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMaxMonth()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfYear(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getWeeksInYear(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getAverageMillisPerYearDividedByTwo()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getWeekyear(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getWeekOfWeekyear(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfMonth(long,int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="org.joda.time.chrono.BasicChronology$YearInfo getYearInfo(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMonthOfYear(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getAverageMillisPerYear()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInMonthMaxForSet(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfWeek(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="org.joda.time.DurationField access$000()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDayOfMonth(long,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getYearMonthMillis(int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getYearDifference(long,long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="org.joda.time.DurationField access$100()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getYear(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInMonthMax(long)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInMonthMax(int)" class="org.joda.time.chrono.BasicChronology" />
	<method signature="int getDaysInMonthMax()" class="org.joda.time.chrono.BasicChronology" />
	<field name="cClockhourOfHalfdayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cHourOfHalfdayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMillisOfSecondField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cSecondOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMinuteOfHourField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cSecondsField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cHoursField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMinutesField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cSecondOfMinuteField" class="org.joda.time.chrono.BasicChronology" />
	<field name="iYearInfoCache" class="org.joda.time.chrono.BasicChronology" />
	<field name="cHalfdaysField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cWeeksField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cClockhourOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMillisField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cDaysField" class="org.joda.time.chrono.BasicChronology" />
	<field name="CACHE_MASK" class="org.joda.time.chrono.BasicChronology" />
	<field name="iMinDaysInFirstWeek" class="org.joda.time.chrono.BasicChronology" />
	<field name="cHalfdayOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMinuteOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicChronology" />
	<field name="CACHE_SIZE" class="org.joda.time.chrono.BasicChronology" />
	<field name="cHourOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<field name="cMillisOfDayField" class="org.joda.time.chrono.BasicChronology" />
	<class name="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.chrono.CopticChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.chrono.CopticChronology getInstance(org.joda.time.DateTimeZone,int)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.chrono.CopticChronology getInstanceUTC()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.chrono.CopticChronology getInstance()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.CopticChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.CopticChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.CopticChronology" />
	<field name="ERA_FIELD" class="org.joda.time.chrono.CopticChronology" />
	<field name="MIN_YEAR" class="org.joda.time.chrono.CopticChronology" />
	<field name="cCache" class="org.joda.time.chrono.CopticChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.CopticChronology" />
	<field name="MAX_YEAR" class="org.joda.time.chrono.CopticChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.CopticChronology" />
	<field name="AM" class="org.joda.time.chrono.CopticChronology" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void addArrayToList(java.util.List,java.lang.Object[])" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void decompose(java.util.List,java.util.List,java.util.List)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<method signature="int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<field name="iParsers" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<field name="iPrinters" class="org.joda.time.format.PeriodFormatterBuilder$Composite" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="long[] getFractionData(long,org.joda.time.DateTimeField)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<field name="iMinDigits" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<field name="iMaxDigits" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<field name="iFieldType" class="org.joda.time.format.DateTimeFormatterBuilder$Fraction" />
	<class name="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.GJEraDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.GJEraDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJEraDateTimeField" />
	<class name="org.joda.time.format.PeriodParser" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" class="org.joda.time.format.PeriodParser" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodParser" />
	<class name="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime roundHalfFloorCopy()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime getLocalTime()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime roundCeilingCopy()" class="org.joda.time.LocalTime$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime addNoWrapToCopy(int)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime addWrapFieldToCopy(int)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime setCopy(int)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime roundHalfEvenCopy()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime roundHalfCeilingCopy()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime roundFloorCopy()" class="org.joda.time.LocalTime$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime addCopy(long)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime withMaximumValue()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.LocalTime$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime addCopy(int)" class="org.joda.time.LocalTime$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.LocalTime,org.joda.time.DateTimeField)" class="org.joda.time.LocalTime$Property" />
	<method signature="long getMillis()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime withMinimumValue()" class="org.joda.time.LocalTime$Property" />
	<method signature="org.joda.time.LocalTime setCopy(java.lang.String)" class="org.joda.time.LocalTime$Property" />
	<field name="iInstant" class="org.joda.time.LocalTime$Property" />
	<field name="iField" class="org.joda.time.LocalTime$Property" />
	<field name="serialVersionUID" class="org.joda.time.LocalTime$Property" />
	<class name="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateMidnight toDateMidnight()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusMinutes(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withEra(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withZone(org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withMillis(long)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property hourOfDay()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minus(org.joda.time.ReadablePeriod)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.YearMonthDay toYearMonthDay()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plus(org.joda.time.ReadablePeriod)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property monthOfYear()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withWeekOfWeekyear(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusDays(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property year()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property weekOfWeekyear()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property secondOfMinute()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minus(long)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plus(long)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusWeeks(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withCenturyOfEra(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withChronology(org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.TimeOfDay toTimeOfDay()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDate(int,int,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusMonths(int)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusMonths(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withFields(org.joda.time.ReadablePartial)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusDays(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property yearOfEra()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property minuteOfHour()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDurationAdded(org.joda.time.ReadableDuration,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property dayOfMonth()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property secondOfDay()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withHourOfDay(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withZoneRetainFields(org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withMonthOfYear(int)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property millisOfDay()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withMinuteOfHour(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusSeconds(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDayOfWeek(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDayOfMonth(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDayOfYear(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime toDateTimeISO()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withMillisOfDay(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime toDateTime()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property centuryOfEra()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property era()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withSecondOfMinute(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withMillisOfSecond(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withWeekyear(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.Chronology)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusHours(int)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.LocalDate toLocalDate()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property minuteOfDay()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusMillis(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withDurationAdded(long,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property yearOfCentury()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property dayOfWeek()" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withTime(int,int,int,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.LocalDateTime toLocalDateTime()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withYear(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusYears(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minus(org.joda.time.ReadableDuration)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plus(org.joda.time.ReadableDuration)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withYearOfEra(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property dayOfYear()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusWeeks(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusHours(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withYearOfCentury(int)" class="org.joda.time.DateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusMinutes(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.LocalTime toLocalTime()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime plusMillis(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusYears(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property weekyear()" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime minusSeconds(int)" class="org.joda.time.DateTime" />
	<method signature="org.joda.time.DateTime$Property millisOfSecond()" class="org.joda.time.DateTime" />
	<field name="serialVersionUID" class="org.joda.time.DateTime" />
	<class name="org.joda.time.base.AbstractPeriod" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.base.AbstractPeriod" />
	<method signature="java.lang.String toString()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="org.joda.time.DurationFieldType[] getFieldTypes()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="int[] getValues()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="int get(org.joda.time.DurationFieldType)" class="org.joda.time.base.AbstractPeriod" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.AbstractPeriod" />
	<method signature="int hashCode()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="int indexOf(org.joda.time.DurationFieldType)" class="org.joda.time.base.AbstractPeriod" />
	<method signature="org.joda.time.MutablePeriod toMutablePeriod()" class="org.joda.time.base.AbstractPeriod" />
	<method signature="java.lang.String toString(org.joda.time.format.PeriodFormatter)" class="org.joda.time.base.AbstractPeriod" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractPeriod" />
	<class name="org.joda.time.Days" />
	<method signature="org.joda.time.Weeks toStandardWeeks()" class="org.joda.time.Days" />
	<method signature="java.lang.String toString()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Hours toStandardHours()" class="org.joda.time.Days" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Days" />
	<method signature="boolean isLessThan(org.joda.time.Days)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days daysBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Days" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days standardDaysIn(org.joda.time.ReadablePeriod)" class="org.joda.time.Days" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days minus(org.joda.time.Days)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days plus(org.joda.time.Days)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days daysIn(org.joda.time.ReadableInterval)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days days(int)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Minutes toStandardMinutes()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days multipliedBy(int)" class="org.joda.time.Days" />
	<method signature="int getDays()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Days" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days plus(int)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days parseDays(java.lang.String)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days minus(int)" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days negated()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Days" />
	<method signature="boolean isGreaterThan(org.joda.time.Days)" class="org.joda.time.Days" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Days" />
	<method signature="org.joda.time.Days dividedBy(int)" class="org.joda.time.Days" />
	<field name="SEVEN" class="org.joda.time.Days" />
	<field name="MAX_VALUE" class="org.joda.time.Days" />
	<field name="ONE" class="org.joda.time.Days" />
	<field name="TWO" class="org.joda.time.Days" />
	<field name="THREE" class="org.joda.time.Days" />
	<field name="FOUR" class="org.joda.time.Days" />
	<field name="serialVersionUID" class="org.joda.time.Days" />
	<field name="PARSER" class="org.joda.time.Days" />
	<field name="SIX" class="org.joda.time.Days" />
	<field name="FIVE" class="org.joda.time.Days" />
	<field name="MIN_VALUE" class="org.joda.time.Days" />
	<field name="ZERO" class="org.joda.time.Days" />
	<class name="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology,int)" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<field name="iLeapMonth" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<field name="iMax" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<field name="MIN" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicMonthOfYearDateTimeField" />
	<class name="org.joda.time.tz.CachedDateTimeZone$Info" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone,long)" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<method signature="int getOffset(long)" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iStandardOffset" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iNextInfo" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iZoneRef" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iPeriodStart" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iNameKey" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<field name="iOffset" class="org.joda.time.tz.CachedDateTimeZone$Info" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<method signature="void &lt;init&gt;(org.joda.time.format.DateTimeParser[])" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<field name="iParsers" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<field name="iParsedLengthEstimate" class="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser" />
	<class name="org.joda.time.format.DateTimePrinter" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimePrinter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimePrinter" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimePrinter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimePrinter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimePrinter" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimePrinter" />
	<class name="org.joda.time.format.PeriodFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormat" />
	<method signature="org.joda.time.format.PeriodFormatter getDefault()" class="org.joda.time.format.PeriodFormat" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.PeriodFormat" />
	<field name="cEnglishWords" class="org.joda.time.format.PeriodFormat" />
	<class name="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="boolean isReadableInterval(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ReadableIntervalConverter" />
	<method signature="void setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableIntervalConverter" />
	<field name="class$org$joda$time$ReadableInterval" class="org.joda.time.convert.ReadableIntervalConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.ReadableIntervalConverter" />
	<class name="org.joda.time.convert.PeriodConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.PeriodConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.PeriodConverter" />
	<method signature="org.joda.time.PeriodType getPeriodType(java.lang.Object)" class="org.joda.time.convert.PeriodConverter" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<field name="iMaxParsedDigits" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<field name="iSigned" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<field name="iFieldType" class="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter" />
	<class name="org.joda.time.chrono.LimitChronology$LimitException" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.LimitChronology,java.lang.String,boolean)" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<method signature="java.lang.String getMessage()" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<field name="iIsLow" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<field name="serialVersionUID" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<field name="this$0" class="org.joda.time.chrono.LimitChronology$LimitException" />
	<class name="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="org.joda.time.tz.CachedDateTimeZone forZone(org.joda.time.DateTimeZone)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="org.joda.time.DateTimeZone getUncachedZone()" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="org.joda.time.tz.CachedDateTimeZone$Info createInfo(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="long previousTransition(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="long nextTransition(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="int hashCode()" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="boolean isFixed()" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="int getOffset(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<method signature="org.joda.time.tz.CachedDateTimeZone$Info getInfo(long)" class="org.joda.time.tz.CachedDateTimeZone" />
	<field name="iInfoCache" class="org.joda.time.tz.CachedDateTimeZone" />
	<field name="serialVersionUID" class="org.joda.time.tz.CachedDateTimeZone" />
	<field name="iZone" class="org.joda.time.tz.CachedDateTimeZone" />
	<field name="cInfoCacheMask" class="org.joda.time.tz.CachedDateTimeZone" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<field name="iValue" class="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral" />
	<class name="org.joda.time.MutableDateTime" />
	<method signature="void setChronology(org.joda.time.Chronology)" class="org.joda.time.MutableDateTime" />
	<method signature="void setDayOfYear(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setTime(long)" class="org.joda.time.MutableDateTime" />
	<method signature="void setRounding(org.joda.time.DateTimeField,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setDayOfMonth(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property weekyear()" class="org.joda.time.MutableDateTime" />
	<method signature="void addMonths(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void add(org.joda.time.ReadableDuration)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property millisOfSecond()" class="org.joda.time.MutableDateTime" />
	<method signature="void addWeeks(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMillisOfSecond(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setRounding(org.joda.time.DateTimeField)" class="org.joda.time.MutableDateTime" />
	<method signature="void set(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setDate(long)" class="org.joda.time.MutableDateTime" />
	<method signature="void setSecondOfDay(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void add(org.joda.time.DurationFieldType,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.MutableDateTime" />
	<method signature="void setZone(org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property dayOfYear()" class="org.joda.time.MutableDateTime" />
	<method signature="void addMillis(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.MutableDateTime" />
	<method signature="int getRoundingMode()" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.MutableDateTime" />
	<method signature="void setZoneRetainFields(org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="void addDays(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property minuteOfDay()" class="org.joda.time.MutableDateTime" />
	<method signature="void setDate(int,int,int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property dayOfWeek()" class="org.joda.time.MutableDateTime" />
	<method signature="java.lang.Object clone()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property yearOfCentury()" class="org.joda.time.MutableDateTime" />
	<method signature="void setTime(org.joda.time.ReadableInstant)" class="org.joda.time.MutableDateTime" />
	<method signature="void add(long)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="void setWeekyear(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMonthOfYear(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setWeekOfWeekyear(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property era()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property centuryOfEra()" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.MutableDateTime" />
	<method signature="void setDate(org.joda.time.ReadableInstant)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property minuteOfHour()" class="org.joda.time.MutableDateTime" />
	<method signature="java.lang.String toString()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property yearOfEra()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property dayOfMonth()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property secondOfDay()" class="org.joda.time.MutableDateTime" />
	<method signature="void setMinuteOfHour(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.DateTimeField getRoundingField()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property millisOfDay()" class="org.joda.time.MutableDateTime" />
	<method signature="void addHours(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMillis(org.joda.time.ReadableInstant)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="void addWeekyears(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void addYears(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setDayOfWeek(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setSecondOfMinute(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setHourOfDay(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setDateTime(int,int,int,int,int,int,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.MutableDateTime" />
	<method signature="void add(org.joda.time.ReadablePeriod)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMillis(long)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMinuteOfDay(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property year()" class="org.joda.time.MutableDateTime" />
	<method signature="void addMinutes(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property monthOfYear()" class="org.joda.time.MutableDateTime" />
	<method signature="void add(org.joda.time.ReadableDuration,int)" class="org.joda.time.MutableDateTime" />
	<method signature="void setMillisOfDay(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property weekOfWeekyear()" class="org.joda.time.MutableDateTime" />
	<method signature="void addSeconds(int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property secondOfMinute()" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime copy()" class="org.joda.time.MutableDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.MutableDateTime" />
	<method signature="void setYear(int)" class="org.joda.time.MutableDateTime" />
	<method signature="void add(org.joda.time.ReadablePeriod,int)" class="org.joda.time.MutableDateTime" />
	<method signature="org.joda.time.MutableDateTime$Property hourOfDay()" class="org.joda.time.MutableDateTime" />
	<method signature="void setTime(int,int,int,int)" class="org.joda.time.MutableDateTime" />
	<field name="iRoundingField" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_HALF_EVEN" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_HALF_FLOOR" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_FLOOR" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_CEILING" class="org.joda.time.MutableDateTime" />
	<field name="iRoundingMode" class="org.joda.time.MutableDateTime" />
	<field name="serialVersionUID" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_NONE" class="org.joda.time.MutableDateTime" />
	<field name="ROUND_HALF_CEILING" class="org.joda.time.MutableDateTime" />
	<class name="org.joda.time.convert.ConverterSet" />
	<method signature="org.joda.time.convert.ConverterSet add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])" class="org.joda.time.convert.ConverterSet" />
	<method signature="org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" class="org.joda.time.convert.ConverterSet" />
	<method signature="void &lt;init&gt;(org.joda.time.convert.Converter[])" class="org.joda.time.convert.ConverterSet" />
	<method signature="org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])" class="org.joda.time.convert.ConverterSet" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ConverterSet" />
	<method signature="org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])" class="org.joda.time.convert.ConverterSet" />
	<method signature="void copyInto(org.joda.time.convert.Converter[])" class="org.joda.time.convert.ConverterSet" />
	<method signature="org.joda.time.convert.Converter select(java.lang.Class)" class="org.joda.time.convert.ConverterSet" />
	<method signature="int size()" class="org.joda.time.convert.ConverterSet" />
	<field name="iConverters" class="org.joda.time.convert.ConverterSet" />
	<field name="iSelectEntries" class="org.joda.time.convert.ConverterSet" />
	<class name="org.joda.time.ReadableInstant" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.ReadableInstant" />
	<method signature="java.lang.String toString()" class="org.joda.time.ReadableInstant" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadableInstant" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.ReadableInstant" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.ReadableInstant" />
	<method signature="org.joda.time.Instant toInstant()" class="org.joda.time.ReadableInstant" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.ReadableInstant" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.ReadableInstant" />
	<method signature="int hashCode()" class="org.joda.time.ReadableInstant" />
	<method signature="boolean isEqual(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInstant" />
	<method signature="long getMillis()" class="org.joda.time.ReadableInstant" />
	<method signature="boolean isAfter(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInstant" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.ReadableInstant" />
	<method signature="boolean isBefore(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInstant" />
	<class name="org.joda.time.ReadWritableDateTime" />
	<method signature="void setDayOfYear(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setDayOfMonth(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setMinuteOfHour(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addMonths(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addWeeks(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addHours(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setMillisOfSecond(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setSecondOfDay(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addWeekyears(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addYears(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setDayOfWeek(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setSecondOfMinute(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setHourOfDay(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addMillis(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setDateTime(int,int,int,int,int,int,int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setMinuteOfDay(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addDays(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addMinutes(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setMillisOfDay(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setDate(int,int,int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void addSeconds(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setWeekyear(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setWeekOfWeekyear(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setMonthOfYear(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setYear(int)" class="org.joda.time.ReadWritableDateTime" />
	<method signature="void setTime(int,int,int,int)" class="org.joda.time.ReadWritableDateTime" />
	<class name="org.joda.time.Years" />
	<method signature="org.joda.time.Years years(int)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years yearsIn(org.joda.time.ReadableInterval)" class="org.joda.time.Years" />
	<method signature="java.lang.String toString()" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years plus(org.joda.time.Years)" class="org.joda.time.Years" />
	<method signature="boolean isGreaterThan(org.joda.time.Years)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years minus(org.joda.time.Years)" class="org.joda.time.Years" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Years" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Years" />
	<method signature="int getYears()" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years negated()" class="org.joda.time.Years" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years multipliedBy(int)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years dividedBy(int)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years parseYears(java.lang.String)" class="org.joda.time.Years" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Years" />
	<method signature="boolean isLessThan(org.joda.time.Years)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years yearsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years minus(int)" class="org.joda.time.Years" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Years" />
	<method signature="org.joda.time.Years plus(int)" class="org.joda.time.Years" />
	<field name="MAX_VALUE" class="org.joda.time.Years" />
	<field name="ONE" class="org.joda.time.Years" />
	<field name="TWO" class="org.joda.time.Years" />
	<field name="THREE" class="org.joda.time.Years" />
	<field name="serialVersionUID" class="org.joda.time.Years" />
	<field name="PARSER" class="org.joda.time.Years" />
	<field name="MIN_VALUE" class="org.joda.time.Years" />
	<field name="ZERO" class="org.joda.time.Years" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="long previousTransition(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="long nextTransition(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="void &lt;init&gt;(java.lang.String,int,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="boolean isFixed()" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="void writeTo(java.io.DataOutput)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$DSTZone readFrom(java.io.DataInput,java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="int getOffset(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Recurrence findMatchingRecurrence(long)" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<field name="iStandardOffset" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<field name="iStartRecurrence" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<field name="serialVersionUID" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<field name="iEndRecurrence" class="org.joda.time.tz.DateTimeZoneBuilder$DSTZone" />
	<class name="org.joda.time.chrono.BasicChronology$YearInfo" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicChronology$YearInfo" />
	<method signature="void &lt;init&gt;(int,long)" class="org.joda.time.chrono.BasicChronology$YearInfo" />
	<field name="iFirstDayMillis" class="org.joda.time.chrono.BasicChronology$YearInfo" />
	<field name="iYear" class="org.joda.time.chrono.BasicChronology$YearInfo" />
	<class name="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1400()" class="org.joda.time.DateTimeFieldType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1900()" class="org.joda.time.DateTimeFieldType" />
	<method signature="java.lang.String getName()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1300()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType minuteOfHour()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1800()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1500()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType yearOfEra()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$500()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$2200()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType dayOfMonth()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType secondOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType millisOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1600()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1700()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$400()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$800()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$600()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$700()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeField getField(org.joda.time.Chronology)" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$900()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType hourOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType weekyearOfCentury()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$200()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType year()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType monthOfYear()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$300()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType secondOfMinute()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType weekOfWeekyear()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType clockhourOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType hourOfHalfday()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType halfdayOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DurationFieldType getDurationType()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$000()" class="org.joda.time.DateTimeFieldType" />
	<method signature="java.lang.String toString()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DurationFieldType getRangeDurationType()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType dayOfYear()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1000()" class="org.joda.time.DateTimeFieldType" />
	<method signature="boolean isSupported(org.joda.time.Chronology)" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$100()" class="org.joda.time.DateTimeFieldType" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$2100()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType weekyear()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$2000()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType millisOfSecond()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1100()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType era()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType access$1200()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType centuryOfEra()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType clockhourOfHalfday()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType minuteOfDay()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType dayOfWeek()" class="org.joda.time.DateTimeFieldType" />
	<method signature="org.joda.time.DateTimeFieldType yearOfCentury()" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR_OF_CENTURY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="CENTURY_OF_ERA_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="MINUTE_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR_OF_CENTURY" class="org.joda.time.DateTimeFieldType" />
	<field name="CENTURY_OF_ERA" class="org.joda.time.DateTimeFieldType" />
	<field name="MINUTE_OF_HOUR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="CLOCKHOUR_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_WEEK_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR" class="org.joda.time.DateTimeFieldType" />
	<field name="MILLIS_OF_SECOND" class="org.joda.time.DateTimeFieldType" />
	<field name="MONTH_OF_YEAR" class="org.joda.time.DateTimeFieldType" />
	<field name="MINUTE_OF_HOUR" class="org.joda.time.DateTimeFieldType" />
	<field name="SECOND_OF_MINUTE" class="org.joda.time.DateTimeFieldType" />
	<field name="HOUR_OF_HALFDAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEKYEAR_OF_CENTURY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_WEEK" class="org.joda.time.DateTimeFieldType" />
	<field name="HALFDAY_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="MILLIS_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="CLOCKHOUR_OF_HALFDAY" class="org.joda.time.DateTimeFieldType" />
	<field name="ERA_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="MILLIS_OF_SECOND_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="SECOND_OF_MINUTE_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="serialVersionUID" class="org.joda.time.DateTimeFieldType" />
	<field name="iName" class="org.joda.time.DateTimeFieldType" />
	<field name="HOUR_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEKYEAR_OF_CENTURY" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR_OF_ERA_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="MILLIS_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEK_OF_WEEKYEAR" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEKYEAR" class="org.joda.time.DateTimeFieldType" />
	<field name="CLOCKHOUR_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="YEAR_OF_ERA" class="org.joda.time.DateTimeFieldType" />
	<field name="HOUR_OF_HALFDAY" class="org.joda.time.DateTimeFieldType" />
	<field name="CLOCKHOUR_OF_HALFDAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEKYEAR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="WEEK_OF_WEEKYEAR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_YEAR" class="org.joda.time.DateTimeFieldType" />
	<field name="SECOND_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="HALFDAY_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="ERA" class="org.joda.time.DateTimeFieldType" />
	<field name="HOUR_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_MONTH" class="org.joda.time.DateTimeFieldType" />
	<field name="MINUTE_OF_DAY" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_MONTH_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="MONTH_OF_YEAR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="DAY_OF_YEAR_TYPE" class="org.joda.time.DateTimeFieldType" />
	<field name="SECOND_OF_DAY_TYPE" class="org.joda.time.DateTimeFieldType" />
	<class name="org.joda.time.ReadWritableInstant" />
	<method signature="void setChronology(org.joda.time.Chronology)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(org.joda.time.ReadablePeriod)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void setMillis(long)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void setZoneRetainFields(org.joda.time.DateTimeZone)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(org.joda.time.ReadableDuration,int)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(org.joda.time.ReadableDuration)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void setMillis(org.joda.time.ReadableInstant)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(long)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void set(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(org.joda.time.DurationFieldType,int)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void setZone(org.joda.time.DateTimeZone)" class="org.joda.time.ReadWritableInstant" />
	<method signature="void add(org.joda.time.ReadablePeriod,int)" class="org.joda.time.ReadWritableInstant" />
	<class name="org.joda.time.field.FieldUtils" />
	<method signature="void verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="int safeNegate(int)" class="org.joda.time.field.FieldUtils" />
	<method signature="int getWrappedValue(int,int,int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="int safeAdd(int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="void verifyValueBounds(java.lang.String,int,int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="long safeSubtract(long,long)" class="org.joda.time.field.FieldUtils" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.FieldUtils" />
	<method signature="int getWrappedValue(int,int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="int safeMultiply(int,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="int safeMultiplyToInt(long,long)" class="org.joda.time.field.FieldUtils" />
	<method signature="long safeAdd(long,long)" class="org.joda.time.field.FieldUtils" />
	<method signature="long safeMultiply(long,int)" class="org.joda.time.field.FieldUtils" />
	<method signature="long safeMultiply(long,long)" class="org.joda.time.field.FieldUtils" />
	<method signature="boolean equals(java.lang.Object,java.lang.Object)" class="org.joda.time.field.FieldUtils" />
	<method signature="int safeToInt(long)" class="org.joda.time.field.FieldUtils" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.field.FieldUtils" />
	<class name="org.joda.time.DateTimeZone$Stub" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.DateTimeZone$Stub" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.DateTimeZone$Stub" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.DateTimeZone$Stub" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeZone$Stub" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.DateTimeZone$Stub" />
	<field name="serialVersionUID" class="org.joda.time.DateTimeZone$Stub" />
	<field name="iID" class="org.joda.time.DateTimeZone$Stub" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="java.lang.String print(long,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<field name="LONG_NAME" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<field name="ID" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<field name="iType" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<field name="SHORT_NAME" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName" />
	<class name="org.joda.time.Seconds" />
	<method signature="org.joda.time.Weeks toStandardWeeks()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds secondsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds negated()" class="org.joda.time.Seconds" />
	<method signature="java.lang.String toString()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Hours toStandardHours()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Seconds" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Seconds" />
	<method signature="boolean isGreaterThan(org.joda.time.Seconds)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds parseSeconds(java.lang.String)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds standardSecondsIn(org.joda.time.ReadablePeriod)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds minus(org.joda.time.Seconds)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds plus(org.joda.time.Seconds)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Minutes toStandardMinutes()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds seconds(int)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds multipliedBy(int)" class="org.joda.time.Seconds" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Seconds" />
	<method signature="int getSeconds()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds dividedBy(int)" class="org.joda.time.Seconds" />
	<method signature="boolean isLessThan(org.joda.time.Seconds)" class="org.joda.time.Seconds" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds minus(int)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds secondsIn(org.joda.time.ReadableInterval)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Seconds plus(int)" class="org.joda.time.Seconds" />
	<method signature="org.joda.time.Days toStandardDays()" class="org.joda.time.Seconds" />
	<field name="MAX_VALUE" class="org.joda.time.Seconds" />
	<field name="ONE" class="org.joda.time.Seconds" />
	<field name="TWO" class="org.joda.time.Seconds" />
	<field name="THREE" class="org.joda.time.Seconds" />
	<field name="serialVersionUID" class="org.joda.time.Seconds" />
	<field name="PARSER" class="org.joda.time.Seconds" />
	<field name="MIN_VALUE" class="org.joda.time.Seconds" />
	<field name="ZERO" class="org.joda.time.Seconds" />
	<class name="org.joda.time.chrono.ISOChronology$Stub" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.chrono.ISOChronology$Stub" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ISOChronology$Stub" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.chrono.ISOChronology$Stub" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ISOChronology$Stub" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.ISOChronology$Stub" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ISOChronology$Stub" />
	<field name="iZone" class="org.joda.time.chrono.ISOChronology$Stub" />
	<class name="org.joda.time.field.ScaledDurationField" />
	<method signature="int getScalar()" class="org.joda.time.field.ScaledDurationField" />
	<method signature="int getValue(long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="int hashCode()" class="org.joda.time.field.ScaledDurationField" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.field.ScaledDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.ScaledDurationField" />
	<field name="iScalar" class="org.joda.time.field.ScaledDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.ScaledDurationField" />
	<class name="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ReadableInstantConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableInstantConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.ReadableInstantConverter" />
	<field name="class$org$joda$time$ReadableInstant" class="org.joda.time.convert.ReadableInstantConverter" />
	<class name="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="org.joda.time.MutablePeriod copy()" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.MutablePeriod" />
	<method signature="void addMonths(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.MutablePeriod" />
	<method signature="void add(org.joda.time.ReadableDuration)" class="org.joda.time.MutablePeriod" />
	<method signature="void addWeeks(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void setMonths(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void add(long,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void add(org.joda.time.DurationFieldType,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="int getWeeks()" class="org.joda.time.MutablePeriod" />
	<method signature="void set(org.joda.time.DurationFieldType,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void addMillis(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(int,int,int,int,int,int,int,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void addDays(int)" class="org.joda.time.MutablePeriod" />
	<method signature="int getDays()" class="org.joda.time.MutablePeriod" />
	<method signature="java.lang.Object clone()" class="org.joda.time.MutablePeriod" />
	<method signature="void clear()" class="org.joda.time.MutablePeriod" />
	<method signature="void add(long)" class="org.joda.time.MutablePeriod" />
	<method signature="void setYears(int)" class="org.joda.time.MutablePeriod" />
	<method signature="int getSeconds()" class="org.joda.time.MutablePeriod" />
	<method signature="void add(org.joda.time.ReadableInterval)" class="org.joda.time.MutablePeriod" />
	<method signature="int getHours()" class="org.joda.time.MutablePeriod" />
	<method signature="int getMillis()" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.MutablePeriod" />
	<method signature="void setHours(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void addHours(int)" class="org.joda.time.MutablePeriod" />
	<method signature="int getMinutes()" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(long)" class="org.joda.time.MutablePeriod" />
	<method signature="void addYears(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setSeconds(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadableInterval)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void add(org.joda.time.ReadablePeriod)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void setDays(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(long,long)" class="org.joda.time.MutablePeriod" />
	<method signature="int getYears()" class="org.joda.time.MutablePeriod" />
	<method signature="void addMinutes(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.MutablePeriod" />
	<method signature="void addSeconds(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadableDuration)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadableDuration,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void setMillis(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setValue(int,int)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(long,long,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void setPeriod(long,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void mergePeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.MutablePeriod" />
	<method signature="void setWeeks(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)" class="org.joda.time.MutablePeriod" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.MutablePeriod" />
	<method signature="void setMinutes(int)" class="org.joda.time.MutablePeriod" />
	<method signature="void add(int,int,int,int,int,int,int,int)" class="org.joda.time.MutablePeriod" />
	<method signature="int getMonths()" class="org.joda.time.MutablePeriod" />
	<field name="serialVersionUID" class="org.joda.time.MutablePeriod" />
	<class name="org.joda.time.base.AbstractInterval" />
	<method signature="java.lang.String toString()" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean contains(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.MutableInterval toMutableInterval()" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.Duration toDuration()" class="org.joda.time.base.AbstractInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.DateTime getEnd()" class="org.joda.time.base.AbstractInterval" />
	<method signature="void checkInterval(long,long)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isAfter(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInterval" />
	<method signature="long toDurationMillis()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isAfterNow()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isBefore(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isBeforeNow()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean containsNow()" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.Period toPeriod(org.joda.time.PeriodType)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean contains(long)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isBefore(org.joda.time.ReadableInterval)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isAfter(org.joda.time.ReadableInterval)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean overlaps(org.joda.time.ReadableInterval)" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean contains(org.joda.time.ReadableInterval)" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.DateTime getStart()" class="org.joda.time.base.AbstractInterval" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.AbstractInterval" />
	<method signature="int hashCode()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isAfter(long)" class="org.joda.time.base.AbstractInterval" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractInterval" />
	<method signature="boolean isBefore(long)" class="org.joda.time.base.AbstractInterval" />
	<class name="org.joda.time.LocalTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalTime" />
	<method signature="int getMinuteOfHour()" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalTime" />
	<method signature="int getMillisOfDay()" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property millisOfSecond()" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime plusHours(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.DateTime toDateTimeToday(org.joda.time.DateTimeZone)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime minusMinutes(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime plusMillis(int)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.DateTime toDateTimeToday()" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime minusSeconds(int)" class="org.joda.time.LocalTime" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withMinuteOfHour(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime plusSeconds(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withMillisOfDay(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withMillisOfSecond(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withSecondOfMinute(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime minusHours(int)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.LocalTime" />
	<method signature="int getValue(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime fromCalendarFields(java.util.Calendar)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime minusMillis(int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime fromDateFields(java.util.Date)" class="org.joda.time.LocalTime" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.LocalTime" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.LocalTime" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.LocalTime" />
	<method signature="java.lang.String toString()" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property minuteOfHour()" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime fromMillisOfDay(long)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime fromMillisOfDay(long,org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.LocalTime" />
	<method signature="int getSecondOfMinute()" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withLocalMillis(long)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property millisOfDay()" class="org.joda.time.LocalTime" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withHourOfDay(int)" class="org.joda.time.LocalTime" />
	<method signature="int getHourOfDay()" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.LocalTime" />
	<method signature="int size()" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(int,int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime plusMinutes(int)" class="org.joda.time.LocalTime" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime plus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withFields(org.joda.time.ReadablePartial)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime minus(org.joda.time.ReadablePeriod)" class="org.joda.time.LocalTime" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property secondOfMinute()" class="org.joda.time.LocalTime" />
	<method signature="long getLocalMillis()" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.LocalTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.LocalTime" />
	<method signature="org.joda.time.LocalTime$Property hourOfDay()" class="org.joda.time.LocalTime" />
	<method signature="int getMillisOfSecond()" class="org.joda.time.LocalTime" />
	<field name="MIDNIGHT" class="org.joda.time.LocalTime" />
	<field name="iChronology" class="org.joda.time.LocalTime" />
	<field name="MILLIS_OF_SECOND" class="org.joda.time.LocalTime" />
	<field name="MINUTE_OF_HOUR" class="org.joda.time.LocalTime" />
	<field name="serialVersionUID" class="org.joda.time.LocalTime" />
	<field name="SECOND_OF_MINUTE" class="org.joda.time.LocalTime" />
	<field name="HOUR_OF_DAY" class="org.joda.time.LocalTime" />
	<field name="iLocalMillis" class="org.joda.time.LocalTime" />
	<field name="TIME_DURATION_TYPES" class="org.joda.time.LocalTime" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneShortName()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void checkParser(org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean isParser(java.lang.Object)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFractionOfMinute(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendYearOfCentury(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMillisOfSecond(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendSecondOfDay(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYearShortText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYearText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendClockhourOfHalfday(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean isPrinter(java.lang.Object)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean isFormatter(java.lang.Object)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void printUnknownString(java.io.Writer,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendClockhourOfDay(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMillisOfDay(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDecimal(org.joda.time.DateTimeFieldType,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void checkPrinter(org.joda.time.format.DateTimePrinter)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="java.lang.Object getFormatter()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendEraText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void clear()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeParser toParser()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFractionOfHour(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendHourOfHalfday(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean canBuildFormatter()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeekShortText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatter toFormatter()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTwoDigitYear(int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendYearOfEra(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendText(org.joda.time.DateTimeFieldType)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFractionOfDay(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfHour(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfDay(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeekText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendHalfdayOfDayText()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTwoDigitWeekyear(int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean canBuildParser()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="void appendUnknownString(java.lang.StringBuffer,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneName()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendCenturyOfEra(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendShortText(org.joda.time.DateTimeFieldType)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="boolean canBuildPrinter()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTwoDigitYear(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFraction(org.joda.time.DateTimeFieldType,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendHourOfDay(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimePrinter toPrinter()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendWeekyear(int,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTwoDigitWeekyear(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendSecondOfMinute(int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<method signature="org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneId()" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<field name="iElementPairs" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<field name="iFormatter" class="org.joda.time.format.DateTimeFormatterBuilder" />
	<class name="org.joda.time.PeriodType" />
	<method signature="java.lang.String toString()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withMonthsRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withYearsRemoved()" class="org.joda.time.PeriodType" />
	<method signature="void &lt;init&gt;(java.lang.String,org.joda.time.DurationFieldType[],int[])" class="org.joda.time.PeriodType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.PeriodType" />
	<method signature="boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withMillisRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearMonthDayTime()" class="org.joda.time.PeriodType" />
	<method signature="java.lang.String getName()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearDay()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withDaysRemoved()" class="org.joda.time.PeriodType" />
	<method signature="int indexOf(org.joda.time.DurationFieldType)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearMonthDay()" class="org.joda.time.PeriodType" />
	<method signature="boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType time()" class="org.joda.time.PeriodType" />
	<method signature="int size()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType millis()" class="org.joda.time.PeriodType" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType dayTime()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType forFields(org.joda.time.DurationFieldType[])" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType weeks()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearDayTime()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType standard()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType hours()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.DurationFieldType getFieldType(int)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType minutes()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearWeekDay()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType yearWeekDayTime()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withMinutesRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType years()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType seconds()" class="org.joda.time.PeriodType" />
	<method signature="int hashCode()" class="org.joda.time.PeriodType" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.PeriodType" />
	<method signature="int getIndexedField(org.joda.time.ReadablePeriod,int)" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType days()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withSecondsRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withWeeksRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType withHoursRemoved()" class="org.joda.time.PeriodType" />
	<method signature="org.joda.time.PeriodType months()" class="org.joda.time.PeriodType" />
	<field name="cYears" class="org.joda.time.PeriodType" />
	<field name="cMillis" class="org.joda.time.PeriodType" />
	<field name="HOUR_INDEX" class="org.joda.time.PeriodType" />
	<field name="cYWD" class="org.joda.time.PeriodType" />
	<field name="cTypes" class="org.joda.time.PeriodType" />
	<field name="cMinutes" class="org.joda.time.PeriodType" />
	<field name="cYMDTime" class="org.joda.time.PeriodType" />
	<field name="WEEK_INDEX" class="org.joda.time.PeriodType" />
	<field name="cWeeks" class="org.joda.time.PeriodType" />
	<field name="DAY_INDEX" class="org.joda.time.PeriodType" />
	<field name="MONTH_INDEX" class="org.joda.time.PeriodType" />
	<field name="cDays" class="org.joda.time.PeriodType" />
	<field name="cYMD" class="org.joda.time.PeriodType" />
	<field name="serialVersionUID" class="org.joda.time.PeriodType" />
	<field name="iName" class="org.joda.time.PeriodType" />
	<field name="MILLI_INDEX" class="org.joda.time.PeriodType" />
	<field name="cYDTime" class="org.joda.time.PeriodType" />
	<field name="iIndices" class="org.joda.time.PeriodType" />
	<field name="MINUTE_INDEX" class="org.joda.time.PeriodType" />
	<field name="cStandard" class="org.joda.time.PeriodType" />
	<field name="cHours" class="org.joda.time.PeriodType" />
	<field name="SECOND_INDEX" class="org.joda.time.PeriodType" />
	<field name="cSeconds" class="org.joda.time.PeriodType" />
	<field name="cTime" class="org.joda.time.PeriodType" />
	<field name="YEAR_INDEX" class="org.joda.time.PeriodType" />
	<field name="cYD" class="org.joda.time.PeriodType" />
	<field name="iTypes" class="org.joda.time.PeriodType" />
	<field name="cDTime" class="org.joda.time.PeriodType" />
	<field name="cYWDTime" class="org.joda.time.PeriodType" />
	<field name="cMonths" class="org.joda.time.PeriodType" />
	<class name="org.joda.time.convert.Converter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.Converter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.Converter" />
	<class name="org.joda.time.ReadableDateTime" />
	<method signature="int getYearOfCentury()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getDayOfMonth()" class="org.joda.time.ReadableDateTime" />
	<method signature="org.joda.time.DateTime toDateTime()" class="org.joda.time.ReadableDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadableDateTime" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTime()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getSecondOfDay()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getMinuteOfHour()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getSecondOfMinute()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getMillisOfDay()" class="org.joda.time.ReadableDateTime" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.ReadableDateTime" />
	<method signature="int getCenturyOfEra()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getMinuteOfDay()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getYearOfEra()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getWeekyear()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getMonthOfYear()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getDayOfWeek()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getEra()" class="org.joda.time.ReadableDateTime" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.ReadableDateTime" />
	<method signature="int getHourOfDay()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getDayOfYear()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getYear()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getMillisOfSecond()" class="org.joda.time.ReadableDateTime" />
	<method signature="int getWeekOfWeekyear()" class="org.joda.time.ReadableDateTime" />
	<class name="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime roundHalfEvenCopy()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime roundHalfCeilingCopy()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime setCopy(int)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime roundHalfFloorCopy()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime addWrapFieldToCopy(int)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime roundCeilingCopy()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.LocalDateTime,org.joda.time.DateTimeField)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime addToCopy(int)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime setCopy(java.lang.String)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime addToCopy(long)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime withMinimumValue()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime getLocalDateTime()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime roundFloorCopy()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="org.joda.time.LocalDateTime withMaximumValue()" class="org.joda.time.LocalDateTime$Property" />
	<method signature="long getMillis()" class="org.joda.time.LocalDateTime$Property" />
	<field name="iInstant" class="org.joda.time.LocalDateTime$Property" />
	<field name="iField" class="org.joda.time.LocalDateTime$Property" />
	<field name="serialVersionUID" class="org.joda.time.LocalDateTime$Property" />
	<class name="org.joda.time.tz.Provider" />
	<method signature="java.util.Set getAvailableIDs()" class="org.joda.time.tz.Provider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.Provider" />
	<method signature="org.joda.time.DateTimeZone getZone(java.lang.String)" class="org.joda.time.tz.Provider" />
	<class name="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGJ()" class="org.joda.time.Chronology" />
	<method signature="long add(org.joda.time.ReadablePeriod,long,int)" class="org.joda.time.Chronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField years()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getBuddhist(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGJUTC()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField secondOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField hours()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField millisOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField yearOfEra()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField minuteOfHour()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField millis()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField dayOfMonth()" class="org.joda.time.Chronology" />
	<method signature="long set(org.joda.time.ReadablePartial,long)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getISOUTC()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getJulian(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField eras()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField hourOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getISO(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getCopticUTC()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGregorian(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField monthOfYear()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField year()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getCoptic(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField hourOfHalfday()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField halfdayOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField weekyears()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField weekOfWeekyear()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField secondOfMinute()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField weekyearOfCentury()" class="org.joda.time.Chronology" />
	<method signature="int[] get(org.joda.time.ReadablePartial,long)" class="org.joda.time.Chronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.Chronology" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField months()" class="org.joda.time.Chronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField dayOfYear()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getJulianUTC()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField seconds()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField days()" class="org.joda.time.Chronology" />
	<method signature="long getDateTimeMillis(long,int,int,int,int)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField minutes()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField weekyear()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGJ(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField millisOfSecond()" class="org.joda.time.Chronology" />
	<method signature="int[] get(org.joda.time.ReadablePeriod,long)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getBuddhist()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField weeks()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getBuddhistUTC()" class="org.joda.time.Chronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField centuryOfEra()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField era()" class="org.joda.time.Chronology" />
	<method signature="int[] get(org.joda.time.ReadablePeriod,long,long)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getCoptic()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField centuries()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DurationField halfdays()" class="org.joda.time.Chronology" />
	<method signature="long add(long,long,int)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField minuteOfDay()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfHalfday()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField yearOfCentury()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getJulian()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.DateTimeField dayOfWeek()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGregorian()" class="org.joda.time.Chronology" />
	<method signature="void validate(org.joda.time.ReadablePartial,int[])" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getISO()" class="org.joda.time.Chronology" />
	<method signature="org.joda.time.Chronology getGregorianUTC()" class="org.joda.time.Chronology" />
	<class name="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getOffsetToAdd(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iDurationField" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iField" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iLeapDurationField" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iTimeField" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iZone" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<field name="iRangeDurationField" class="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField" />
	<class name="org.joda.time.convert.PartialConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.PartialConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.PartialConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.PartialConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.PartialConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)" class="org.joda.time.convert.PartialConverter" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="int parse(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="int scan(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="void printTo(java.io.Writer,int)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="void printTo(java.lang.StringBuffer,int)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<method signature="int calculatePrintedLength(int)" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<field name="iText" class="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix" />
	<class name="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long)" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<field name="this$0" class="org.joda.time.chrono.GJChronology$ImpreciseCutoverField" />
	<class name="org.joda.time.DateTimeUtils$FixedMillisProvider" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.DateTimeUtils$FixedMillisProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeUtils$FixedMillisProvider" />
	<method signature="long getMillis()" class="org.joda.time.DateTimeUtils$FixedMillisProvider" />
	<field name="iMillis" class="org.joda.time.DateTimeUtils$FixedMillisProvider" />
	<class name="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withDurationAfterStart(org.joda.time.ReadableDuration)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withEndMillis(long)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withPeriodBeforeEnd(org.joda.time.ReadablePeriod)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Interval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withChronology(org.joda.time.Chronology)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withDurationBeforeEnd(org.joda.time.ReadableDuration)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.DateTimeZone)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval overlap(org.joda.time.ReadableInterval)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withStartMillis(long)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withPeriodAfterStart(org.joda.time.ReadablePeriod)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval gap(org.joda.time.ReadableInterval)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withStart(org.joda.time.ReadableInstant)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.Chronology)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)" class="org.joda.time.Interval" />
	<method signature="org.joda.time.Interval withEnd(org.joda.time.ReadableInstant)" class="org.joda.time.Interval" />
	<method signature="boolean abuts(org.joda.time.ReadableInterval)" class="org.joda.time.Interval" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.Interval" />
	<field name="serialVersionUID" class="org.joda.time.Interval" />
	<class name="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int get(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long gregorianToJulian(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="long julianToGregorian(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iDurationField" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iGregorianField" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iConvertByWeekyear" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iJulianField" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iCutover" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="this$0" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<field name="iRangeDurationField" class="org.joda.time.chrono.GJChronology$CutoverField" />
	<class name="org.joda.time.format.PeriodFormatter" />
	<method signature="java.lang.String print(org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="boolean isParser()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void checkParser()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.Period parsePeriod(java.lang.String)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void checkPrinter()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="java.util.Locale getLocale()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void checkPeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.format.PeriodPrinter getPrinter()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.format.PeriodFormatter withParseType(org.joda.time.PeriodType)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.format.PeriodParser getParser()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.MutablePeriod parseMutablePeriod(java.lang.String)" class="org.joda.time.format.PeriodFormatter" />
	<method signature="boolean isPrinter()" class="org.joda.time.format.PeriodFormatter" />
	<method signature="org.joda.time.PeriodType getParseType()" class="org.joda.time.format.PeriodFormatter" />
	<field name="iParser" class="org.joda.time.format.PeriodFormatter" />
	<field name="iPrinter" class="org.joda.time.format.PeriodFormatter" />
	<field name="iParseType" class="org.joda.time.format.PeriodFormatter" />
	<field name="iLocale" class="org.joda.time.format.PeriodFormatter" />
	<class name="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant minus(long)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant plus(long)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTimeISO()" class="org.joda.time.Instant" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant withDurationAdded(org.joda.time.ReadableDuration,int)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.DateTime toDateTimeISO()" class="org.joda.time.Instant" />
	<method signature="org.joda.time.DateTime toDateTime()" class="org.joda.time.Instant" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Instant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTime()" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant plus(org.joda.time.ReadableDuration)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant withMillis(long)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant minus(org.joda.time.ReadableDuration)" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant toInstant()" class="org.joda.time.Instant" />
	<method signature="org.joda.time.Instant withDurationAdded(long,int)" class="org.joda.time.Instant" />
	<method signature="long getMillis()" class="org.joda.time.Instant" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.Instant" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.Instant" />
	<field name="serialVersionUID" class="org.joda.time.Instant" />
	<field name="iMillis" class="org.joda.time.Instant" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void &lt;init&gt;(char)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<field name="iValue" class="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="int parse(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="int scan(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="void printTo(java.io.Writer,int)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="void printTo(java.lang.StringBuffer,int)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<method signature="int calculatePrintedLength(int)" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<field name="iSingularText" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<field name="iPluralText" class="org.joda.time.format.PeriodFormatterBuilder$PluralAffix" />
	<class name="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="long previousTransition(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="long nextTransition(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,int,int)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="int hashCode()" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="int getOffsetFromLocal(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="boolean isFixed()" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="java.util.TimeZone toTimeZone()" class="org.joda.time.tz.FixedDateTimeZone" />
	<method signature="int getOffset(long)" class="org.joda.time.tz.FixedDateTimeZone" />
	<field name="iStandardOffset" class="org.joda.time.tz.FixedDateTimeZone" />
	<field name="serialVersionUID" class="org.joda.time.tz.FixedDateTimeZone" />
	<field name="iNameKey" class="org.joda.time.tz.FixedDateTimeZone" />
	<field name="iWallOffset" class="org.joda.time.tz.FixedDateTimeZone" />
	<class name="org.joda.time.base.BaseInterval" />
	<method signature="void setInterval(long,long,org.joda.time.Chronology)" class="org.joda.time.base.BaseInterval" />
	<method signature="long getEndMillis()" class="org.joda.time.base.BaseInterval" />
	<method signature="long getStartMillis()" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.Chronology)" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)" class="org.joda.time.base.BaseInterval" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.base.BaseInterval" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.base.BaseInterval" />
	<field name="iEndMillis" class="org.joda.time.base.BaseInterval" />
	<field name="iStartMillis" class="org.joda.time.base.BaseInterval" />
	<field name="iChronology" class="org.joda.time.base.BaseInterval" />
	<field name="serialVersionUID" class="org.joda.time.base.BaseInterval" />
	<class name="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<field name="INSTANCE" class="org.joda.time.chrono.ISOYearOfEraDateTimeField" />
	<class name="org.joda.time.chrono.BuddhistChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="org.joda.time.chrono.BuddhistChronology getInstance()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="org.joda.time.chrono.BuddhistChronology getInstanceUTC()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object)" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="org.joda.time.chrono.BuddhistChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.BuddhistChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="ERA_FIELD" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="cCache" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="BUDDHIST_OFFSET" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="BE" class="org.joda.time.chrono.BuddhistChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BuddhistChronology" />
	<class name="org.joda.time.DateTimeUtils$MillisProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeUtils$MillisProvider" />
	<method signature="long getMillis()" class="org.joda.time.DateTimeUtils$MillisProvider" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeUtils$MillisProvider" />
	<class name="org.joda.time.field.UnsupportedDurationField" />
	<method signature="org.joda.time.DurationFieldType getType()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationFieldType)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="int getValue(long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="java.lang.UnsupportedOperationException unsupported()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="org.joda.time.field.UnsupportedDurationField getInstance(org.joda.time.DurationFieldType)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="int hashCode()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.field.UnsupportedDurationField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.field.UnsupportedDurationField" />
	<field name="cCache" class="org.joda.time.field.UnsupportedDurationField" />
	<field name="iType" class="org.joda.time.field.UnsupportedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.UnsupportedDurationField" />
	<class name="org.joda.time.DateTimeConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeConstants" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeConstants" />
	<field name="MILLIS_PER_DAY" class="org.joda.time.DateTimeConstants" />
	<field name="SEPTEMBER" class="org.joda.time.DateTimeConstants" />
	<field name="MINUTES_PER_WEEK" class="org.joda.time.DateTimeConstants" />
	<field name="SECONDS_PER_MINUTE" class="org.joda.time.DateTimeConstants" />
	<field name="WEDNESDAY" class="org.joda.time.DateTimeConstants" />
	<field name="NOVEMBER" class="org.joda.time.DateTimeConstants" />
	<field name="SATURDAY" class="org.joda.time.DateTimeConstants" />
	<field name="JULY" class="org.joda.time.DateTimeConstants" />
	<field name="APRIL" class="org.joda.time.DateTimeConstants" />
	<field name="MILLIS_PER_WEEK" class="org.joda.time.DateTimeConstants" />
	<field name="SECONDS_PER_DAY" class="org.joda.time.DateTimeConstants" />
	<field name="SECONDS_PER_HOUR" class="org.joda.time.DateTimeConstants" />
	<field name="MILLIS_PER_HOUR" class="org.joda.time.DateTimeConstants" />
	<field name="OCTOBER" class="org.joda.time.DateTimeConstants" />
	<field name="MAY" class="org.joda.time.DateTimeConstants" />
	<field name="FEBRUARY" class="org.joda.time.DateTimeConstants" />
	<field name="MONDAY" class="org.joda.time.DateTimeConstants" />
	<field name="MINUTES_PER_HOUR" class="org.joda.time.DateTimeConstants" />
	<field name="SUNDAY" class="org.joda.time.DateTimeConstants" />
	<field name="JUNE" class="org.joda.time.DateTimeConstants" />
	<field name="MILLIS_PER_MINUTE" class="org.joda.time.DateTimeConstants" />
	<field name="BC" class="org.joda.time.DateTimeConstants" />
	<field name="HOURS_PER_DAY" class="org.joda.time.DateTimeConstants" />
	<field name="MARCH" class="org.joda.time.DateTimeConstants" />
	<field name="JANUARY" class="org.joda.time.DateTimeConstants" />
	<field name="MINUTES_PER_DAY" class="org.joda.time.DateTimeConstants" />
	<field name="FRIDAY" class="org.joda.time.DateTimeConstants" />
	<field name="HOURS_PER_WEEK" class="org.joda.time.DateTimeConstants" />
	<field name="THURSDAY" class="org.joda.time.DateTimeConstants" />
	<field name="SECONDS_PER_WEEK" class="org.joda.time.DateTimeConstants" />
	<field name="DAYS_PER_WEEK" class="org.joda.time.DateTimeConstants" />
	<field name="DECEMBER" class="org.joda.time.DateTimeConstants" />
	<field name="AUGUST" class="org.joda.time.DateTimeConstants" />
	<field name="PM" class="org.joda.time.DateTimeConstants" />
	<field name="AD" class="org.joda.time.DateTimeConstants" />
	<field name="CE" class="org.joda.time.DateTimeConstants" />
	<field name="MILLIS_PER_SECOND" class="org.joda.time.DateTimeConstants" />
	<field name="BCE" class="org.joda.time.DateTimeConstants" />
	<field name="TUESDAY" class="org.joda.time.DateTimeConstants" />
	<field name="AM" class="org.joda.time.DateTimeConstants" />
	<class name="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int convertText(java.lang.String,java.util.Locale)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJDayOfWeekDateTimeField" />
	<class name="org.joda.time.DurationField" />
	<method signature="org.joda.time.DurationFieldType getType()" class="org.joda.time.DurationField" />
	<method signature="java.lang.String toString()" class="org.joda.time.DurationField" />
	<method signature="int getValue(long)" class="org.joda.time.DurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.DurationField" />
	<method signature="long add(long,int)" class="org.joda.time.DurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.DurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.DurationField" />
	<method signature="long add(long,long)" class="org.joda.time.DurationField" />
	<method signature="java.lang.String getName()" class="org.joda.time.DurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.DurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.DurationField" />
	<method signature="long subtract(long,long)" class="org.joda.time.DurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.DurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.DurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.DurationField" />
	<method signature="boolean isSupported()" class="org.joda.time.DurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.DurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.DurationField" />
	<method signature="long subtract(long,int)" class="org.joda.time.DurationField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.DurationField" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.DurationField" />
	<class name="org.joda.time.tz.DefaultNameProvider" />
	<method signature="java.lang.String getName(java.util.Locale,java.lang.String,java.lang.String)" class="org.joda.time.tz.DefaultNameProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DefaultNameProvider" />
	<method signature="java.util.HashMap createCache()" class="org.joda.time.tz.DefaultNameProvider" />
	<method signature="java.lang.String[] getNameSet(java.util.Locale,java.lang.String,java.lang.String)" class="org.joda.time.tz.DefaultNameProvider" />
	<method signature="java.lang.String getShortName(java.util.Locale,java.lang.String,java.lang.String)" class="org.joda.time.tz.DefaultNameProvider" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.DefaultNameProvider" />
	<field name="iByLocaleCache" class="org.joda.time.tz.DefaultNameProvider" />
	<class name="org.joda.time.chrono.AssembledChronology$Fields" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<method signature="boolean isSupported(org.joda.time.DateTimeField)" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<method signature="boolean isSupported(org.joda.time.DurationField)" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<method signature="void copyFieldsFrom(org.joda.time.Chronology)" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="weekyears" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="centuryOfEra" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="era" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="hourOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="weekyearOfCentury" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="eras" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="monthOfYear" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="centuries" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="halfdays" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="minuteOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="year" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="clockhourOfHalfday" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="yearOfCentury" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="clockhourOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="hourOfHalfday" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="halfdayOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="weekOfWeekyear" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="dayOfWeek" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="secondOfMinute" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="minutes" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="hours" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="millis" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="dayOfYear" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="weeks" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="yearOfEra" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="months" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="minuteOfHour" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="days" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="seconds" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="dayOfMonth" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="secondOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="weekyear" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="years" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="millisOfSecond" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<field name="millisOfDay" class="org.joda.time.chrono.AssembledChronology$Fields" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void addArrayToList(java.util.List,java.lang.Object[])" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void decompose(java.util.List,java.util.List,java.util.List)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="boolean isParser()" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="boolean isPrinter()" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<field name="iParsers" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<field name="iPrintedLengthEstimate" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<field name="iParsedLengthEstimate" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<field name="iPrinters" class="org.joda.time.format.DateTimeFormatterBuilder$Composite" />
	<class name="org.joda.time.ReadWritablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setHours(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addMonths(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addWeeks(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addHours(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setMonths(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addYears(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void add(org.joda.time.DurationFieldType,int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadableInterval)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setSeconds(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void set(org.joda.time.DurationFieldType,int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addMillis(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setPeriod(int,int,int,int,int,int,int,int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void add(org.joda.time.ReadablePeriod)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setDays(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addDays(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addMinutes(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void addSeconds(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void clear()" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setYears(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setMillis(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setValue(int,int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void add(org.joda.time.ReadableInterval)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setWeeks(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void setMinutes(int)" class="org.joda.time.ReadWritablePeriod" />
	<method signature="void add(int,int,int,int,int,int,int,int)" class="org.joda.time.ReadWritablePeriod" />
	<class name="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks dividedBy(int)" class="org.joda.time.Weeks" />
	<method signature="java.lang.String toString()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Hours toStandardHours()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks minus(org.joda.time.Weeks)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks weeks(int)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks plus(org.joda.time.Weeks)" class="org.joda.time.Weeks" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks minus(int)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks standardWeeksIn(org.joda.time.ReadablePeriod)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks plus(int)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks weeksIn(org.joda.time.ReadableInterval)" class="org.joda.time.Weeks" />
	<method signature="boolean isGreaterThan(org.joda.time.Weeks)" class="org.joda.time.Weeks" />
	<method signature="int getWeeks()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks multipliedBy(int)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Minutes toStandardMinutes()" class="org.joda.time.Weeks" />
	<method signature="boolean isLessThan(org.joda.time.Weeks)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks negated()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks parseWeeks(java.lang.String)" class="org.joda.time.Weeks" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Weeks weeksBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Weeks" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Weeks" />
	<method signature="org.joda.time.Days toStandardDays()" class="org.joda.time.Weeks" />
	<field name="MAX_VALUE" class="org.joda.time.Weeks" />
	<field name="ONE" class="org.joda.time.Weeks" />
	<field name="TWO" class="org.joda.time.Weeks" />
	<field name="THREE" class="org.joda.time.Weeks" />
	<field name="serialVersionUID" class="org.joda.time.Weeks" />
	<field name="PARSER" class="org.joda.time.Weeks" />
	<field name="MIN_VALUE" class="org.joda.time.Weeks" />
	<field name="ZERO" class="org.joda.time.Weeks" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber" />
	<class name="org.joda.time.ReadableDuration" />
	<method signature="java.lang.String toString()" class="org.joda.time.ReadableDuration" />
	<method signature="boolean isEqual(org.joda.time.ReadableDuration)" class="org.joda.time.ReadableDuration" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.ReadableDuration" />
	<method signature="org.joda.time.Duration toDuration()" class="org.joda.time.ReadableDuration" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadableDuration" />
	<method signature="boolean isShorterThan(org.joda.time.ReadableDuration)" class="org.joda.time.ReadableDuration" />
	<method signature="int hashCode()" class="org.joda.time.ReadableDuration" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.ReadableDuration" />
	<method signature="boolean isLongerThan(org.joda.time.ReadableDuration)" class="org.joda.time.ReadableDuration" />
	<method signature="long getMillis()" class="org.joda.time.ReadableDuration" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.ReadableDuration" />
	<class name="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getAverageMillisPerYearDividedByTwo()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getMonthOfYear(long,int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getAverageMillisPerYear()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long setYear(long,int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.chrono.IslamicChronology getInstance()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDaysInYearMax()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getTotalMillisByYearMonth(int,int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getYearDifference(long,long)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDaysInYear(int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDaysInYearMonth(int,int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getYear(long)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDayOfMonth(long)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getAverageMillisPerMonth()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.chrono.IslamicChronology getInstanceUTC()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.chrono.IslamicChronology$LeapYearPatternType getLeapYearPatternType()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDaysInMonthMax(int)" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.IslamicChronology" />
	<method signature="int getDaysInMonthMax()" class="org.joda.time.chrono.IslamicChronology" />
	<field name="iLeapYears" class="org.joda.time.chrono.IslamicChronology" />
	<field name="ERA_FIELD" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MIN_YEAR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="cCache" class="org.joda.time.chrono.IslamicChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_LONG_YEAR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="SHORT_MONTH_LENGTH" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MAX_YEAR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="LEAP_YEAR_16_BASED" class="org.joda.time.chrono.IslamicChronology" />
	<field name="CYCLE" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_LONG_MONTH" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_YEAR_1" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_MONTH" class="org.joda.time.chrono.IslamicChronology" />
	<field name="LEAP_YEAR_HABASH_AL_HASIB" class="org.joda.time.chrono.IslamicChronology" />
	<field name="AH" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_YEAR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_SHORT_YEAR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_MONTH_PAIR" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MONTH_PAIR_LENGTH" class="org.joda.time.chrono.IslamicChronology" />
	<field name="LEAP_YEAR_15_BASED" class="org.joda.time.chrono.IslamicChronology" />
	<field name="MILLIS_PER_CYCLE" class="org.joda.time.chrono.IslamicChronology" />
	<field name="LEAP_YEAR_INDIAN" class="org.joda.time.chrono.IslamicChronology" />
	<field name="LONG_MONTH_LENGTH" class="org.joda.time.chrono.IslamicChronology" />
	<class name="org.joda.time.DateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.DateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getName()" class="org.joda.time.DateTimeField" />
	<method signature="int[] addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.DateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.DateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.DateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.DateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.DateTimeField" />
	<method signature="long set(long,java.lang.String)" class="org.joda.time.DateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.DateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.DateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.DateTimeField" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int get(long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String toString()" class="org.joda.time.DateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsShortText(long)" class="org.joda.time.DateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.DateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsText(long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="boolean isSupported()" class="org.joda.time.DateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.DateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.DateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.DateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.DateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.DateTimeField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.DateTimeField" />
	<method signature="org.joda.time.DateTimeFieldType getType()" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.DateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.DateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.DateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.DateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.DateTimeField" />
	<class name="org.joda.time.DateTimeComparator" />
	<method signature="java.lang.String toString()" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeFieldType getLowerLimit()" class="org.joda.time.DateTimeComparator" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeFieldType getUpperLimit()" class="org.joda.time.DateTimeComparator" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeComparator getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeComparator getInstance()" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeComparator getDateOnlyInstance()" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeComparator getInstance(org.joda.time.DateTimeFieldType)" class="org.joda.time.DateTimeComparator" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" class="org.joda.time.DateTimeComparator" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.DateTimeComparator" />
	<method signature="int hashCode()" class="org.joda.time.DateTimeComparator" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.DateTimeComparator" />
	<method signature="org.joda.time.DateTimeComparator getTimeOnlyInstance()" class="org.joda.time.DateTimeComparator" />
	<field name="iLowerLimit" class="org.joda.time.DateTimeComparator" />
	<field name="ALL_INSTANCE" class="org.joda.time.DateTimeComparator" />
	<field name="DATE_INSTANCE" class="org.joda.time.DateTimeComparator" />
	<field name="TIME_INSTANCE" class="org.joda.time.DateTimeComparator" />
	<field name="serialVersionUID" class="org.joda.time.DateTimeComparator" />
	<field name="iUpperLimit" class="org.joda.time.DateTimeComparator" />
	<class name="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay withMaximumValue()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay getTimeOfDay()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.TimeOfDay,int)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay addToCopy(int)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay withMinimumValue()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.ReadablePartial getReadablePartial()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay setCopy(int)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay addNoWrapToCopy(int)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay addWrapFieldToCopy(int)" class="org.joda.time.TimeOfDay$Property" />
	<method signature="int get()" class="org.joda.time.TimeOfDay$Property" />
	<method signature="org.joda.time.TimeOfDay setCopy(java.lang.String)" class="org.joda.time.TimeOfDay$Property" />
	<field name="iFieldIndex" class="org.joda.time.TimeOfDay$Property" />
	<field name="serialVersionUID" class="org.joda.time.TimeOfDay$Property" />
	<field name="iTimeOfDay" class="org.joda.time.TimeOfDay$Property" />
	<class name="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.chrono.EthiopicChronology getInstance()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.chrono.EthiopicChronology getInstanceUTC()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone,int)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.EthiopicChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="ERA_FIELD" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="MIN_YEAR" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="cCache" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="MAX_YEAR" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.EthiopicChronology" />
	<field name="EE" class="org.joda.time.chrono.EthiopicChronology" />
	<class name="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration standardHours(long)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration standardMinutes(long)" class="org.joda.time.Duration" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.Duration" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration toDuration()" class="org.joda.time.Duration" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Duration" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration withDurationAdded(long,int)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration withDurationAdded(org.joda.time.ReadableDuration,int)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration plus(org.joda.time.ReadableDuration)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration standardSeconds(long)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration minus(org.joda.time.ReadableDuration)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration withMillis(long)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration standardDays(long)" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration plus(long)" class="org.joda.time.Duration" />
	<method signature="long getStandardSeconds()" class="org.joda.time.Duration" />
	<method signature="org.joda.time.Duration minus(long)" class="org.joda.time.Duration" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.Duration" />
	<field name="serialVersionUID" class="org.joda.time.Duration" />
	<field name="ZERO" class="org.joda.time.Duration" />
	<class name="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<field name="iField" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJChronology$LinkedDurationField" />
	<class name="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMaximumValueForSet(long,int)" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicDayOfMonthDateTimeField" />
	<class name="org.joda.time.convert.InstantConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.InstantConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.InstantConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.InstantConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.InstantConverter" />
	<class name="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="int getMaximumValueForSet(long,int)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<field name="iUnitField" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<field name="iUnitMillis" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.PreciseDurationDateTimeField" />
	<class name="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField,org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="int getOffsetToAdd(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="int getOffsetFromLocalToSubtract(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long addOffset(long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<field name="iField" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<field name="iZone" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<field name="iTimeField" class="org.joda.time.chrono.ZonedChronology$ZonedDurationField" />
	<class name="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter fullDate()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter longDateTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter createFormatterForPattern(java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="java.lang.String parseToken(java.lang.String,int[])" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter shortTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter createFormatterForStyle(java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter shortDate()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="int selectStyle(char)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter fullTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter mediumDateTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter mediumTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter shortDateTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter longDate()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="void parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter forStyle(java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter longTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter createFormatterForStyleIndex(int,int)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="void appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter mediumDate()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="java.lang.String patternForStyle(java.lang.String,java.util.Locale)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter fullDateTime()" class="org.joda.time.format.DateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="boolean isNumericToken(java.lang.String)" class="org.joda.time.format.DateTimeFormat" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.DateTimeFormat" />
	<field name="TIME" class="org.joda.time.format.DateTimeFormat" />
	<field name="SHORT" class="org.joda.time.format.DateTimeFormat" />
	<field name="FULL" class="org.joda.time.format.DateTimeFormat" />
	<field name="MEDIUM" class="org.joda.time.format.DateTimeFormat" />
	<field name="DATE" class="org.joda.time.format.DateTimeFormat" />
	<field name="LONG" class="org.joda.time.format.DateTimeFormat" />
	<field name="DATETIME" class="org.joda.time.format.DateTimeFormat" />
	<field name="NONE" class="org.joda.time.format.DateTimeFormat" />
	<field name="cStyleCache" class="org.joda.time.format.DateTimeFormat" />
	<field name="cPatternedCache" class="org.joda.time.format.DateTimeFormat" />
	<class name="org.joda.time.field.DecoratedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="org.joda.time.DurationField getWrappedField()" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationField,org.joda.time.DurationFieldType)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.DecoratedDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.DecoratedDurationField" />
	<field name="iField" class="org.joda.time.field.DecoratedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.DecoratedDurationField" />
	<class name="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="java.lang.String getPattern(java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<field name="cCache" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<field name="iDateStyle" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<field name="iTimeStyle" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<field name="iType" class="org.joda.time.format.DateTimeFormat$StyleFormatter" />
	<class name="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long getAverageMillisPerYearDividedByTwo()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getDaysInYearMonth(int,int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getMonthOfYear(long,int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long getAverageMillisPerYear()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getMonthOfYear(long)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long setYear(long,int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getDayOfMonth(long)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long getAverageMillisPerMonth()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long getTotalMillisByYearMonth(int,int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getDaysInMonthMax(int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="long getYearDifference(long,long)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getDaysInMonthMax()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<method signature="int getMaxMonth()" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<field name="MILLIS_PER_MONTH" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<field name="MONTH_LENGTH" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<field name="MILLIS_PER_YEAR" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicFixedMonthChronology" />
	<class name="org.joda.time.field.LenientDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.LenientDateTimeField" />
	<method signature="org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)" class="org.joda.time.field.LenientDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.LenientDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.LenientDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.Chronology)" class="org.joda.time.field.LenientDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.LenientDateTimeField" />
	<field name="iBase" class="org.joda.time.field.LenientDateTimeField" />
	<class name="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.LimitChronology,org.joda.time.DurationField)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<field name="this$0" class="org.joda.time.chrono.LimitChronology$LimitDurationField" />
	<class name="org.joda.time.field.RemainderDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="int getDivided(int)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="int getDivisor()" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.RemainderDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.field.DividedDateTimeField)" class="org.joda.time.field.RemainderDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.RemainderDateTimeField" />
	<field name="iDivisor" class="org.joda.time.field.RemainderDateTimeField" />
	<field name="iRangeField" class="org.joda.time.field.RemainderDateTimeField" />
	<class name="org.joda.time.Period" />
	<method signature="org.joda.time.Weeks toStandardWeeks()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusSeconds(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minutes(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withYears(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Hours toStandardHours()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Period" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusMillis(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusYears(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusMinutes(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,long)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period normalizedStandard(org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period weeks(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusHours(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusWeeks(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withFields(org.joda.time.ReadablePeriod)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period months(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period seconds(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period days(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="int getWeeks()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusYears(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withHours(int)" class="org.joda.time.Period" />
	<method signature="void checkYearsAndMonths(java.lang.String)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Minutes toStandardMinutes()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withDays(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusMillis(int)" class="org.joda.time.Period" />
	<method signature="int getDays()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(int[],org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withPeriodType(org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="int getSeconds()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusHours(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Period" />
	<method signature="int getHours()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusSeconds(int)" class="org.joda.time.Period" />
	<method signature="int getMillis()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period hours(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusDays(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period millis(int)" class="org.joda.time.Period" />
	<method signature="int getMinutes()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minusMonths(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withMonths(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusMonths(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period years(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusWeeks(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plus(org.joda.time.ReadablePeriod)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period minus(org.joda.time.ReadablePeriod)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withMinutes(int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusDays(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Period" />
	<method signature="int getYears()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withMillis(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period normalizedStandard()" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withField(org.joda.time.DurationFieldType,int)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withSeconds(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period plusMinutes(int)" class="org.joda.time.Period" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" class="org.joda.time.Period" />
	<method signature="org.joda.time.Days toStandardDays()" class="org.joda.time.Period" />
	<method signature="org.joda.time.Period withWeeks(int)" class="org.joda.time.Period" />
	<method signature="int getMonths()" class="org.joda.time.Period" />
	<field name="serialVersionUID" class="org.joda.time.Period" />
	<field name="ZERO" class="org.joda.time.Period" />
	<class name="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<method signature="void addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<method signature="void addRule(org.joda.time.tz.ZoneInfoCompiler$Rule)" class="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<method signature="void &lt;init&gt;(org.joda.time.tz.ZoneInfoCompiler$Rule)" class="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<field name="iRules" class="org.joda.time.tz.ZoneInfoCompiler$RuleSet" />
	<class name="org.joda.time.DateTimeUtils" />
	<method signature="long getDurationMillis(org.joda.time.ReadableDuration)" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.Chronology getIntervalChronology(org.joda.time.ReadableInterval)" class="org.joda.time.DateTimeUtils" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)" class="org.joda.time.DateTimeUtils" />
	<method signature="long getInstantMillis(org.joda.time.ReadableInstant)" class="org.joda.time.DateTimeUtils" />
	<method signature="long currentTimeMillis()" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)" class="org.joda.time.DateTimeUtils" />
	<method signature="void setCurrentMillisSystem()" class="org.joda.time.DateTimeUtils" />
	<method signature="void checkPermission()" class="org.joda.time.DateTimeUtils" />
	<method signature="boolean isContiguous(org.joda.time.ReadablePartial)" class="org.joda.time.DateTimeUtils" />
	<method signature="void setCurrentMillisFixed(long)" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.ReadableInterval getReadableInterval(org.joda.time.ReadableInterval)" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.Chronology getInstantChronology(org.joda.time.ReadableInstant)" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.Chronology getChronology(org.joda.time.Chronology)" class="org.joda.time.DateTimeUtils" />
	<method signature="void setCurrentMillisOffset(long)" class="org.joda.time.DateTimeUtils" />
	<method signature="org.joda.time.Chronology getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.DateTimeUtils" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeUtils" />
	<field name="SYSTEM_MILLIS_PROVIDER" class="org.joda.time.DateTimeUtils" />
	<field name="cMillisProvider" class="org.joda.time.DateTimeUtils" />
	<class name="org.joda.time.field.SkipDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeField)" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.field.SkipDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.SkipDateTimeField" />
	<field name="iChronology" class="org.joda.time.field.SkipDateTimeField" />
	<field name="iMinValue" class="org.joda.time.field.SkipDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.SkipDateTimeField" />
	<field name="iSkip" class="org.joda.time.field.SkipDateTimeField" />
	<class name="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void setOffset(int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="int access$302(org.joda.time.format.DateTimeParserBucket,int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.format.DateTimeParserBucket$SavedField[] access$202(org.joda.time.format.DateTimeParserBucket,org.joda.time.format.DateTimeParserBucket$SavedField[])" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="int getOffset()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.format.DateTimeParserBucket$SavedField[] access$200(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="java.lang.Object saveState()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="java.util.Locale getLocale()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.DateTimeZone access$000(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="long computeMillis(boolean,java.lang.String)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void setZone(org.joda.time.DateTimeZone)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="int access$300(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="long computeMillis()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void setPivotYear(java.lang.Integer)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="java.lang.Integer getPivotYear()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void sort(java.lang.Comparable[],int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.DateTimeZone access$002(org.joda.time.format.DateTimeParserBucket,org.joda.time.DateTimeZone)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="boolean restoreState(java.lang.Object)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void saveField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology,java.util.Locale)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="long computeMillis(boolean)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="int access$100(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void saveField(org.joda.time.DateTimeField,int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void saveField(org.joda.time.format.DateTimeParserBucket$SavedField)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="boolean access$402(org.joda.time.format.DateTimeParserBucket,boolean)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="int access$102(org.joda.time.format.DateTimeParserBucket,int)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale)" class="org.joda.time.format.DateTimeParserBucket" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer)" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iSavedFields" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iChrono" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iSavedFieldsShared" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iSavedFieldsCount" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iPivotYear" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iLocale" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iZone" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iSavedState" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iMillis" class="org.joda.time.format.DateTimeParserBucket" />
	<field name="iOffset" class="org.joda.time.format.DateTimeParserBucket" />
	<class name="org.joda.time.base.BaseDateTime" />
	<method signature="void setChronology(org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void setMillis(long)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.base.BaseDateTime" />
	<method signature="org.joda.time.Chronology checkChronology(org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int)" class="org.joda.time.base.BaseDateTime" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="long checkInstant(long,org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.Chronology)" class="org.joda.time.base.BaseDateTime" />
	<method signature="long getMillis()" class="org.joda.time.base.BaseDateTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.BaseDateTime" />
	<field name="iChronology" class="org.joda.time.base.BaseDateTime" />
	<field name="serialVersionUID" class="org.joda.time.base.BaseDateTime" />
	<field name="iMillis" class="org.joda.time.base.BaseDateTime" />
	<class name="org.joda.time.field.DividedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.field.RemainderDateTimeField,org.joda.time.DateTimeFieldType)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int getDivisor()" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.DividedDateTimeField" />
	<method signature="int getRemainder(int)" class="org.joda.time.field.DividedDateTimeField" />
	<field name="iDurationField" class="org.joda.time.field.DividedDateTimeField" />
	<field name="iMin" class="org.joda.time.field.DividedDateTimeField" />
	<field name="iMax" class="org.joda.time.field.DividedDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.DividedDateTimeField" />
	<field name="iDivisor" class="org.joda.time.field.DividedDateTimeField" />
	<class name="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.tz.Provider getProvider()" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String toString()" class="org.joda.time.DateTimeZone" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeZone" />
	<method signature="boolean isLocalDateTimeGap(org.joda.time.LocalDateTime)" class="org.joda.time.DateTimeZone" />
	<method signature="java.util.TimeZone toTimeZone()" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getName(long,java.util.Locale)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone forOffsetHours(int)" class="org.joda.time.DateTimeZone" />
	<method signature="long previousTransition(long)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getConvertedId(java.lang.String)" class="org.joda.time.DateTimeZone" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getShortName(long,java.util.Locale)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone forID(java.lang.String)" class="org.joda.time.DateTimeZone" />
	<method signature="java.util.Set getAvailableIDs()" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.Object writeReplace()" class="org.joda.time.DateTimeZone" />
	<method signature="long convertLocalToUTC(long,boolean)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getID()" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.tz.Provider getDefaultProvider()" class="org.joda.time.DateTimeZone" />
	<method signature="int getOffset(long)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.format.DateTimeFormatter offsetFormatter()" class="org.joda.time.DateTimeZone" />
	<method signature="void setDefault(org.joda.time.DateTimeZone)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone forOffsetHoursMinutes(int,int)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getNameKey(long)" class="org.joda.time.DateTimeZone" />
	<method signature="int getStandardOffset(long)" class="org.joda.time.DateTimeZone" />
	<method signature="boolean isStandardOffset(long)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getShortName(long)" class="org.joda.time.DateTimeZone" />
	<method signature="void setProvider(org.joda.time.tz.Provider)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.tz.NameProvider getDefaultNameProvider()" class="org.joda.time.DateTimeZone" />
	<method signature="void setNameProvider(org.joda.time.tz.NameProvider)" class="org.joda.time.DateTimeZone" />
	<method signature="long convertUTCToLocal(long)" class="org.joda.time.DateTimeZone" />
	<method signature="long getMillisKeepLocal(org.joda.time.DateTimeZone,long)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String getName(long)" class="org.joda.time.DateTimeZone" />
	<method signature="long nextTransition(long)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone getDefault()" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.tz.NameProvider getNameProvider()" class="org.joda.time.DateTimeZone" />
	<method signature="int parseOffset(java.lang.String)" class="org.joda.time.DateTimeZone" />
	<method signature="int hashCode()" class="org.joda.time.DateTimeZone" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.DateTimeZone" />
	<method signature="int getOffsetFromLocal(long)" class="org.joda.time.DateTimeZone" />
	<method signature="void setProvider0(org.joda.time.tz.Provider)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)" class="org.joda.time.DateTimeZone" />
	<method signature="void setNameProvider0(org.joda.time.tz.NameProvider)" class="org.joda.time.DateTimeZone" />
	<method signature="boolean isFixed()" class="org.joda.time.DateTimeZone" />
	<method signature="int getOffset(org.joda.time.ReadableInstant)" class="org.joda.time.DateTimeZone" />
	<method signature="org.joda.time.DateTimeZone forOffsetMillis(int)" class="org.joda.time.DateTimeZone" />
	<method signature="java.lang.String printOffset(int)" class="org.joda.time.DateTimeZone" />
	<field name="cZoneIdConversion" class="org.joda.time.DateTimeZone" />
	<field name="cProvider" class="org.joda.time.DateTimeZone" />
	<field name="cAvailableIDs" class="org.joda.time.DateTimeZone" />
	<field name="UTC" class="org.joda.time.DateTimeZone" />
	<field name="serialVersionUID" class="org.joda.time.DateTimeZone" />
	<field name="cDefault" class="org.joda.time.DateTimeZone" />
	<field name="cOffsetFormatter" class="org.joda.time.DateTimeZone" />
	<field name="cNameProvider" class="org.joda.time.DateTimeZone" />
	<field name="iFixedOffsetCache" class="org.joda.time.DateTimeZone" />
	<field name="iID" class="org.joda.time.DateTimeZone" />
	<class name="org.joda.time.field.BaseDurationField" />
	<method signature="org.joda.time.DurationFieldType getType()" class="org.joda.time.field.BaseDurationField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.BaseDurationField" />
	<method signature="int getValue(long)" class="org.joda.time.field.BaseDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.BaseDurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.field.BaseDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.BaseDurationField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.BaseDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationFieldType)" class="org.joda.time.field.BaseDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.BaseDurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.field.BaseDurationField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.BaseDurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.field.BaseDurationField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.field.BaseDurationField" />
	<field name="iType" class="org.joda.time.field.BaseDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.BaseDurationField" />
	<class name="org.joda.time.base.BasePeriod" />
	<method signature="void setPeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="org.joda.time.PeriodType checkPeriodType(org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="void addFieldInto(int[],org.joda.time.DurationFieldType,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BasePeriod" />
	<method signature="org.joda.time.Duration toDurationTo(org.joda.time.ReadableInstant)" class="org.joda.time.base.BasePeriod" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.base.BasePeriod" />
	<method signature="void setField(org.joda.time.DurationFieldType,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void setFieldInto(int[],org.joda.time.DurationFieldType,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" class="org.joda.time.base.BasePeriod" />
	<method signature="int size()" class="org.joda.time.base.BasePeriod" />
	<method signature="void setPeriod(int,int,int,int,int,int,int,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="void setPeriodInternal(int,int,int,int,int,int,int,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void addPeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="int[] mergePeriodInto(int[],org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(int[],org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<method signature="int[] addPeriodInto(int[],org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="org.joda.time.DurationFieldType getFieldType(int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void addField(org.joda.time.DurationFieldType,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void setValues(int[])" class="org.joda.time.base.BasePeriod" />
	<method signature="void setValue(int,int)" class="org.joda.time.base.BasePeriod" />
	<method signature="int getValue(int)" class="org.joda.time.base.BasePeriod" />
	<method signature="void mergePeriod(org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.base.BasePeriod" />
	<method signature="org.joda.time.Duration toDurationFrom(org.joda.time.ReadableInstant)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)" class="org.joda.time.base.BasePeriod" />
	<method signature="void setPeriodInternal(org.joda.time.ReadablePeriod)" class="org.joda.time.base.BasePeriod" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" class="org.joda.time.base.BasePeriod" />
	<field name="iValues" class="org.joda.time.base.BasePeriod" />
	<field name="iType" class="org.joda.time.base.BasePeriod" />
	<field name="serialVersionUID" class="org.joda.time.base.BasePeriod" />
	<class name="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicChronology$HalfdayField" />
	<class name="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.ZeroIsMaxDateTimeField" />
	<class name="org.joda.time.base.AbstractInstant" />
	<method signature="java.lang.String toString()" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTime(org.joda.time.Chronology)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.DateTime toDateTimeISO()" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.DateTime toDateTime()" class="org.joda.time.base.AbstractInstant" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.DateTimeZone)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTime(org.joda.time.DateTimeZone)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.DateTime toDateTime(org.joda.time.Chronology)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.Instant toInstant()" class="org.joda.time.base.AbstractInstant" />
	<method signature="java.util.Date toDate()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isEqual(long)" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isAfter(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isAfterNow()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isBefore(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isBeforeNow()" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTimeISO()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isSupported(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.MutableDateTime toMutableDateTime()" class="org.joda.time.base.AbstractInstant" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractInstant" />
	<method signature="java.lang.String toString(org.joda.time.format.DateTimeFormatter)" class="org.joda.time.base.AbstractInstant" />
	<method signature="int get(org.joda.time.DateTimeField)" class="org.joda.time.base.AbstractInstant" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.base.AbstractInstant" />
	<method signature="int hashCode()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isEqualNow()" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isEqual(org.joda.time.ReadableInstant)" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isAfter(long)" class="org.joda.time.base.AbstractInstant" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractInstant" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.base.AbstractInstant" />
	<method signature="boolean isBefore(long)" class="org.joda.time.base.AbstractInstant" />
	<class name="org.joda.time.base.AbstractDateTime" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getSecondOfDay()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getMinuteOfHour()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getSecondOfMinute()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getMillisOfDay()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getCenturyOfEra()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getWeekyear()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getDayOfWeek()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getHourOfDay()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getYearOfCentury()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getDayOfMonth()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int get(org.joda.time.DateTimeFieldType)" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getMinuteOfDay()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getYearOfEra()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="java.util.GregorianCalendar toGregorianCalendar()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getMonthOfYear()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getEra()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getDayOfYear()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getYear()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getMillisOfSecond()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="java.util.Calendar toCalendar(java.util.Locale)" class="org.joda.time.base.AbstractDateTime" />
	<method signature="int getWeekOfWeekyear()" class="org.joda.time.base.AbstractDateTime" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.AbstractDateTime" />
	<class name="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="org.joda.time.PeriodType getPeriodType(java.lang.Object)" class="org.joda.time.convert.ReadablePeriodConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ReadablePeriodConverter" />
	<field name="class$org$joda$time$ReadablePeriod" class="org.joda.time.convert.ReadablePeriodConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.ReadablePeriodConverter" />
	<class name="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plusDays(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withWeekOfWeekyear(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withDurationAdded(long,int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.YearMonthDay toYearMonthDay()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withZoneRetainFields(org.joda.time.DateTimeZone)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withMillis(long)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property weekOfWeekyear()" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withEra(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withDurationAdded(org.joda.time.ReadableDuration,int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property year()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property monthOfYear()" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withMonthOfYear(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minusDays(int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(long,org.joda.time.DateTimeZone)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(int,int,int,org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property dayOfMonth()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plusMonths(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minusMonths(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property yearOfEra()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plus(long)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plusWeeks(int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minus(long)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withFields(org.joda.time.ReadablePartial)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withCenturyOfEra(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minus(org.joda.time.ReadablePeriod)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plus(org.joda.time.ReadablePeriod)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property era()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property centuryOfEra()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withChronology(org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeZone)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withWeekyear(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.LocalDate toLocalDate()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property dayOfWeek()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property yearOfCentury()" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withDayOfWeek(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withDayOfMonth(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withDayOfYear(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property dayOfYear()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withYearOfCentury(int)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(int,int,int,org.joda.time.DateTimeZone)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minusYears(int)" class="org.joda.time.DateMidnight" />
	<method signature="long checkInstant(long,org.joda.time.Chronology)" class="org.joda.time.DateMidnight" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withYearOfEra(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plus(org.joda.time.ReadableDuration)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minus(org.joda.time.ReadableDuration)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight minusWeeks(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight plusYears(int)" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight$Property weekyear()" class="org.joda.time.DateMidnight" />
	<method signature="org.joda.time.DateMidnight withYear(int)" class="org.joda.time.DateMidnight" />
	<field name="serialVersionUID" class="org.joda.time.DateMidnight" />
	<class name="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.MutableDateTime parseMutableDateTime(java.lang.String)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.io.Writer,long)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.DateTime parseDateTime(java.lang.String)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withLocale(java.util.Locale)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.Chronology getChronolgy()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeParser requireParser()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="java.util.Locale getLocale()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,long)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withPivotYear(java.lang.Integer)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withPivotYear(int)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="java.lang.Integer getPivotYear()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="boolean isOffsetParsed()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withOffsetParsed()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="boolean isParser()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="java.lang.String print(long)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.Chronology selectChronology(org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="java.lang.String print(org.joda.time.ReadablePartial)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="java.lang.String print(org.joda.time.ReadableInstant)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimePrinter getPrinter()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeParser getParser()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="long parseMillis(java.lang.String)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadableInstant)" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="org.joda.time.format.DateTimePrinter requirePrinter()" class="org.joda.time.format.DateTimeFormatter" />
	<method signature="boolean isPrinter()" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iChrono" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iOffsetParsed" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iParser" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iPrinter" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iPivotYear" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iLocale" class="org.joda.time.format.DateTimeFormatter" />
	<field name="iZone" class="org.joda.time.format.DateTimeFormatter" />
	<class name="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter timeElementParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="void checkNotStrictISO(java.util.Collection,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter secondElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hourMinute()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekDate()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dayOfWeekElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter time()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateHourMinuteSecond()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicTTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter year()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateHour()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter timeParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hourMinuteSecond()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter minuteElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dayOfMonthElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter localTimeParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter timeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicDateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicOrdinalDate()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekyearWeekDay()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter tTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter literalTElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter ordinalDateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dayOfYearElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="void time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter offsetElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekDateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter ordinalDate()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicDate()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter date()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter yearElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateTimeParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicWeekDateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicWeekDate()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekyearElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter yearMonthDay()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateHourMinute()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter fractionElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter basicOrdinalDateTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hour()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter monthElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekyearWeek()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter yearMonth()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter hourElement()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter tTime()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter weekyear()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter localDateParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter forFields(java.util.Collection,boolean,boolean)" class="org.joda.time.format.ISODateTimeFormat" />
	<method signature="org.joda.time.format.DateTimeFormatter dateElementParser()" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bod" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dye" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="tp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="wdtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dhmsl" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ltp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bdtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dotp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ww" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="od" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="hmsl" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="hmsf" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bd" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dpe" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="mhe" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dme" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bwdtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dtp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="odt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bwd" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="lte" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bwdt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bodt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dhm" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ldp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="we" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dwe" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ze" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="hm" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bodtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ldotp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dh" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ymd" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="odtx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="wwd" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="wwe" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bdt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dp" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="tpe" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ye" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="bttx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="fse" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="btx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="btt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="mye" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="tx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dhms" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="t" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="tt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="dhmsf" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="wdt" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ttx" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="hde" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="ym" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="hms" class="org.joda.time.format.ISODateTimeFormat" />
	<field name="sme" class="org.joda.time.format.ISODateTimeFormat" />
	<class name="org.joda.time.tz.UTCProvider" />
	<method signature="java.util.Set getAvailableIDs()" class="org.joda.time.tz.UTCProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.UTCProvider" />
	<method signature="org.joda.time.DateTimeZone getZone(java.lang.String)" class="org.joda.time.tz.UTCProvider" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.UTCProvider" />
	<class name="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="int convertText(java.lang.String,java.util.Locale)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology)" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.GJMonthOfYearDateTimeField" />
	<class name="org.joda.time.DateTimeUtils$OffsetMillisProvider" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.DateTimeUtils$OffsetMillisProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeUtils$OffsetMillisProvider" />
	<method signature="long getMillis()" class="org.joda.time.DateTimeUtils$OffsetMillisProvider" />
	<field name="iMillis" class="org.joda.time.DateTimeUtils$OffsetMillisProvider" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void setFixedSavings(java.lang.String,int)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void &lt;init&gt;(org.joda.time.tz.DateTimeZoneBuilder$RuleSet)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void setStandardOffset(int)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="int getStandardOffset()" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$DSTZone buildTailZone(java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Transition nextTransition(long,int)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="long getUpperLimit(int)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Transition firstTransition(long)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void setUpperLimit(int,org.joda.time.tz.DateTimeZoneBuilder$OfYear)" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iInitialSaveMillis" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iStandardOffset" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iUpperOfYear" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iInitialNameKey" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="YEAR_LIMIT" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iRules" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<field name="iUpperYear" class="org.joda.time.tz.DateTimeZoneBuilder$RuleSet" />
	<class name="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(long)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(int[],org.joda.time.Chronology)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(org.joda.time.base.BasePartial,org.joda.time.Chronology)" class="org.joda.time.base.BasePartial" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.base.BasePartial" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.base.BasePartial" />
	<method signature="int[] getValues()" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(org.joda.time.base.BasePartial,int[])" class="org.joda.time.base.BasePartial" />
	<method signature="void setValues(int[])" class="org.joda.time.base.BasePartial" />
	<method signature="void setValue(int,int)" class="org.joda.time.base.BasePartial" />
	<method signature="int getValue(int)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;(long,org.joda.time.Chronology)" class="org.joda.time.base.BasePartial" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.base.BasePartial" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.base.BasePartial" />
	<field name="iValues" class="org.joda.time.base.BasePartial" />
	<field name="iChronology" class="org.joda.time.base.BasePartial" />
	<field name="serialVersionUID" class="org.joda.time.base.BasePartial" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="int getFieldType()" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="int parseInt(java.lang.String,int,int)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="boolean isZero(org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void &lt;init&gt;(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="long getFieldValue(org.joda.time.ReadablePeriod)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="boolean isSupported(org.joda.time.PeriodType,int)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<method signature="void &lt;init&gt;(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iFieldFormatters" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iMaxParsedDigits" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iMinPrintedDigits" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iRejectSignedValues" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iSuffix" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iPrintZeroSetting" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iPrefix" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<field name="iFieldType" class="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="int digitCount(java.lang.String,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<method signature="void &lt;init&gt;(java.lang.String,boolean,int,int)" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<field name="iZeroOffsetText" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<field name="iMinFields" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<field name="iMaxFields" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<field name="iShowSeparators" class="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset" />
	<class name="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<field name="iEraText" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<field name="ERA_VALUE" class="org.joda.time.chrono.BasicSingleEraDateTimeField" />
	<class name="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="int estimatePrintedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="java.lang.String print(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="int estimateParsedLength()" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,boolean)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="java.lang.String print(long,org.joda.time.Chronology,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<method signature="void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<field name="iShort" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<field name="iFieldType" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<field name="cParseCache" class="org.joda.time.format.DateTimeFormatterBuilder$TextField" />
	<class name="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.field.ImpreciseDateTimeField,org.joda.time.DurationFieldType)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<field name="this$0" class="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField" />
	<class name="org.joda.time.convert.AbstractConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="java.lang.String toString()" class="org.joda.time.convert.AbstractConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="boolean isReadableInterval(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.AbstractConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="org.joda.time.PeriodType getPeriodType(java.lang.Object)" class="org.joda.time.convert.AbstractConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.AbstractConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.AbstractConverter" />
	<class name="org.joda.time.chrono.LenientChronology" />
	<method signature="org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.LenientChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.LenientChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.LenientChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.LenientChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.LenientChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.LenientChronology" />
	<field name="iWithUTC" class="org.joda.time.chrono.LenientChronology" />
	<class name="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.LimitChronology,org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<field name="iDurationField" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<field name="iLeapDurationField" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<field name="this$0" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<field name="iRangeDurationField" class="org.joda.time.chrono.LimitChronology$LimitDateTimeField" />
	<class name="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.Partial$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial addToCopy(int)" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.ReadablePartial getReadablePartial()" class="org.joda.time.Partial$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.Partial,int)" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial getPartial()" class="org.joda.time.Partial$Property" />
	<method signature="int get()" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial setCopy(int)" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial addWrapFieldToCopy(int)" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial withMaximumValue()" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial withMinimumValue()" class="org.joda.time.Partial$Property" />
	<method signature="org.joda.time.Partial setCopy(java.lang.String)" class="org.joda.time.Partial$Property" />
	<field name="iPartial" class="org.joda.time.Partial$Property" />
	<field name="iFieldIndex" class="org.joda.time.Partial$Property" />
	<field name="serialVersionUID" class="org.joda.time.Partial$Property" />
	<class name="org.joda.time.chrono.ZonedChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="long localToUTC(long)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="boolean useTimeArithmetic(org.joda.time.DurationField)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.chrono.ZonedChronology getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="long getDateTimeMillis(long,int,int,int,int)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.DurationField convertField(org.joda.time.DurationField,java.util.HashMap)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField,java.util.HashMap)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.ZonedChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ZonedChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ZonedChronology" />
	<class name="org.joda.time.field.MillisDurationField" />
	<method signature="org.joda.time.DurationFieldType getType()" class="org.joda.time.field.MillisDurationField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.MillisDurationField" />
	<method signature="int getValue(long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="int getValue(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.MillisDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getMillis(long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.MillisDurationField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getValueAsLong(long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.MillisDurationField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getMillis(int)" class="org.joda.time.field.MillisDurationField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.field.MillisDurationField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.field.MillisDurationField" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.field.MillisDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.MillisDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.MillisDurationField" />
	<field name="INSTANCE" class="org.joda.time.field.MillisDurationField" />
	<class name="org.joda.time.format.PeriodPrinter" />
	<method signature="int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodPrinter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodPrinter" />
	<method signature="void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodPrinter" />
	<method signature="void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" class="org.joda.time.format.PeriodPrinter" />
	<method signature="int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" class="org.joda.time.format.PeriodPrinter" />
	<class name="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder printZeroNever()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder printZeroIfSupported()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendDays()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void appendField(int,int)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendMinutes()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendHours()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendMillis()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeconds()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder maximumParsedDigits(int)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String,java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendYears()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void clearPrefix()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void appendField(int)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendMillis3Digit()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendWeeks()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder printZeroRarelyFirst()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSecondsWithMillis()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void clear()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder printZeroAlways()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsBefore(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="java.lang.Object[] createComposite(java.util.List)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodPrinter toPrinter()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendMonths()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatter toFormatter()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder printZeroRarelyLast()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder rejectSignedValues(boolean)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodFormatter)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="org.joda.time.format.PeriodParser toParser()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="SECONDS_OPTIONAL_MILLIS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iPrintZeroSetting" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iFieldFormatters" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iMaxParsedDigits" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="SECONDS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iElementPairs" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="YEARS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="MINUTES" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="DAYS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="MAX_FIELD" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iRejectSignedValues" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="WEEKS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="PRINT_ZERO_NEVER" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="PRINT_ZERO_RARELY_LAST" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iNotPrinter" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="MONTHS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="PRINT_ZERO_RARELY_FIRST" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iPrefix" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="PRINT_ZERO_ALWAYS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="SECONDS_MILLIS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="PRINT_ZERO_IF_SUPPORTED" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iMinPrintedDigits" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="MILLIS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="iNotParser" class="org.joda.time.format.PeriodFormatterBuilder" />
	<field name="HOURS" class="org.joda.time.format.PeriodFormatterBuilder" />
	<class name="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int[] addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long set(long,java.lang.String)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsShortText(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsText(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="org.joda.time.DateTimeFieldType getType()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="org.joda.time.DateTimeField getWrappedField()" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.DelegatedDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.field.DelegatedDateTimeField" />
	<field name="iField" class="org.joda.time.field.DelegatedDateTimeField" />
	<field name="iType" class="org.joda.time.field.DelegatedDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.DelegatedDateTimeField" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="long next(long,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Recurrence renameAppend(java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="long previous(long,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="void &lt;init&gt;(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$Recurrence readFrom(java.io.DataInput)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="java.lang.String getNameKey()" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="int getSaveMillis()" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="void writeTo(java.io.DataOutput)" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear()" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<field name="iNameKey" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<field name="iOfYear" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<field name="iSaveMillis" class="org.joda.time.tz.DateTimeZoneBuilder$Recurrence" />
	<class name="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime withMinimumValue()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.DateTime$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime setCopy(int)" class="org.joda.time.DateTime$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTime,org.joda.time.DateTimeField)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime addWrapFieldToCopy(int)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime withMaximumValue()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime addToCopy(long)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime roundFloorCopy()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime roundHalfCeilingCopy()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime setCopy(java.lang.String)" class="org.joda.time.DateTime$Property" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime addToCopy(int)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime roundHalfEvenCopy()" class="org.joda.time.DateTime$Property" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime roundCeilingCopy()" class="org.joda.time.DateTime$Property" />
	<method signature="long getMillis()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime roundHalfFloorCopy()" class="org.joda.time.DateTime$Property" />
	<method signature="org.joda.time.DateTime getDateTime()" class="org.joda.time.DateTime$Property" />
	<field name="iInstant" class="org.joda.time.DateTime$Property" />
	<field name="iField" class="org.joda.time.DateTime$Property" />
	<field name="serialVersionUID" class="org.joda.time.DateTime$Property" />
	<class name="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<method signature="java.lang.String formatName(java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<method signature="void &lt;init&gt;(java.util.StringTokenizer)" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<method signature="java.lang.String toString()" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<method signature="void addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iDateTimeOfYear" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iFromYear" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iType" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iName" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iLetterS" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iToYear" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<field name="iSaveMillis" class="org.joda.time.tz.ZoneInfoCompiler$Rule" />
	<class name="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getDifference(org.joda.time.ReadableInstant)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int get()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMaximumValueOverall()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="long remainder()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int compareTo(org.joda.time.ReadablePartial)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMinimumValueOverall()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getAsText()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getAsText(java.util.Locale)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int compareTo(org.joda.time.ReadableInstant)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="long getDifferenceAsLong(org.joda.time.ReadableInstant)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getAsShortText()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="boolean isLeap()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getAsShortText(java.util.Locale)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int getLeapAmount()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="int hashCode()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="java.lang.String getAsString()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="long getMillis()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<field name="serialVersionUID" class="org.joda.time.field.AbstractReadableInstantFieldProperty" />
	<class name="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.ReadableDurationConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.ReadableDurationConverter" />
	<field name="class$org$joda$time$ReadableDuration" class="org.joda.time.convert.ReadableDurationConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.ReadableDurationConverter" />
	<class name="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMaximumValueForSet(long,int)" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicDayOfYearDateTimeField" />
	<class name="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="org.joda.time.Chronology getLenientISOChronology()" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="int parseTime(java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="int parseDayOfWeek(java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="int parseYear(java.lang.String,int)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void main(java.lang.String[])" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear getStartOfYear()" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void parseDataFile(java.io.BufferedReader)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="boolean test(java.lang.String,org.joda.time.DateTimeZone)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="java.util.Map compile(java.io.File,java.io.File[])" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="char parseZoneChar(char)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="int parseMonth(java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="java.lang.String parseOptional(java.lang.String)" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void printUsage()" class="org.joda.time.tz.ZoneInfoCompiler" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.ZoneInfoCompiler" />
	<field name="iRuleSets" class="org.joda.time.tz.ZoneInfoCompiler" />
	<field name="cLenientISO" class="org.joda.time.tz.ZoneInfoCompiler" />
	<field name="cStartOfYear" class="org.joda.time.tz.ZoneInfoCompiler" />
	<field name="iLinks" class="org.joda.time.tz.ZoneInfoCompiler" />
	<field name="iZones" class="org.joda.time.tz.ZoneInfoCompiler" />
	<class name="org.joda.time.ReadableInterval" />
	<method signature="java.lang.String toString()" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.Period toPeriod(org.joda.time.PeriodType)" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.Duration toDuration()" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.MutableInterval toMutableInterval()" class="org.joda.time.ReadableInterval" />
	<method signature="long getEndMillis()" class="org.joda.time.ReadableInterval" />
	<method signature="boolean contains(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadableInterval" />
	<method signature="boolean isBefore(org.joda.time.ReadableInterval)" class="org.joda.time.ReadableInterval" />
	<method signature="boolean isAfter(org.joda.time.ReadableInterval)" class="org.joda.time.ReadableInterval" />
	<method signature="boolean overlaps(org.joda.time.ReadableInterval)" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.DateTime getEnd()" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.ReadableInterval" />
	<method signature="boolean contains(org.joda.time.ReadableInterval)" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.DateTime getStart()" class="org.joda.time.ReadableInterval" />
	<method signature="org.joda.time.Interval toInterval()" class="org.joda.time.ReadableInterval" />
	<method signature="long getStartMillis()" class="org.joda.time.ReadableInterval" />
	<method signature="int hashCode()" class="org.joda.time.ReadableInterval" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.ReadableInterval" />
	<method signature="long toDurationMillis()" class="org.joda.time.ReadableInterval" />
	<method signature="boolean isAfter(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInterval" />
	<method signature="boolean isBefore(org.joda.time.ReadableInstant)" class="org.joda.time.ReadableInterval" />
	<class name="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeField)" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.field.SkipUndoDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.SkipUndoDateTimeField" />
	<field name="iChronology" class="org.joda.time.field.SkipUndoDateTimeField" />
	<field name="iMinValue" class="org.joda.time.field.SkipUndoDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.SkipUndoDateTimeField" />
	<field name="iSkip" class="org.joda.time.field.SkipUndoDateTimeField" />
	<class name="org.joda.time.ReadablePeriod" />
	<method signature="boolean isSupported(org.joda.time.DurationFieldType)" class="org.joda.time.ReadablePeriod" />
	<method signature="java.lang.String toString()" class="org.joda.time.ReadablePeriod" />
	<method signature="int get(org.joda.time.DurationFieldType)" class="org.joda.time.ReadablePeriod" />
	<method signature="int getValue(int)" class="org.joda.time.ReadablePeriod" />
	<method signature="org.joda.time.Period toPeriod()" class="org.joda.time.ReadablePeriod" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadablePeriod" />
	<method signature="int hashCode()" class="org.joda.time.ReadablePeriod" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.ReadablePeriod" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.ReadablePeriod" />
	<method signature="org.joda.time.DurationFieldType getFieldType(int)" class="org.joda.time.ReadablePeriod" />
	<method signature="org.joda.time.MutablePeriod toMutablePeriod()" class="org.joda.time.ReadablePeriod" />
	<method signature="int size()" class="org.joda.time.ReadablePeriod" />
	<class name="org.joda.time.chrono.JulianChronology" />
	<method signature="long getAverageMillisPerYearDividedByTwo()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="long getAverageMillisPerYear()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.chrono.JulianChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="long getDateMidnightMillis(int,int,int)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="long calculateFirstDayOfYearMillis(int)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="int getMaxYear()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.chrono.JulianChronology getInstance()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.chrono.JulianChronology getInstanceUTC()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="long getAverageMillisPerMonth()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="int adjustYearForSet(int)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="long getApproxMillisAtEpochDividedByTwo()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.chrono.JulianChronology getInstance(org.joda.time.DateTimeZone,int)" class="org.joda.time.chrono.JulianChronology" />
	<method signature="int getMinYear()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.JulianChronology" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.JulianChronology" />
	<field name="MILLIS_PER_MONTH" class="org.joda.time.chrono.JulianChronology" />
	<field name="MIN_YEAR" class="org.joda.time.chrono.JulianChronology" />
	<field name="cCache" class="org.joda.time.chrono.JulianChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.JulianChronology" />
	<field name="MILLIS_PER_YEAR" class="org.joda.time.chrono.JulianChronology" />
	<field name="MAX_YEAR" class="org.joda.time.chrono.JulianChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.JulianChronology" />
	<class name="org.joda.time.field.PreciseDurationField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="boolean isPrecise()" class="org.joda.time.field.PreciseDurationField" />
	<method signature="void &lt;init&gt;(org.joda.time.DurationFieldType,long)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long add(long,int)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long getValueAsLong(long,long)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long getMillis(long,long)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="int hashCode()" class="org.joda.time.field.PreciseDurationField" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long add(long,long)" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long getUnitMillis()" class="org.joda.time.field.PreciseDurationField" />
	<method signature="long getMillis(int,long)" class="org.joda.time.field.PreciseDurationField" />
	<field name="iUnitMillis" class="org.joda.time.field.PreciseDurationField" />
	<field name="serialVersionUID" class="org.joda.time.field.PreciseDurationField" />
	<class name="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="long set(long,boolean)" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,java.lang.String,java.util.Locale)" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,int)" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="int compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<method signature="int compareTo(java.lang.Object)" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<field name="iField" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<field name="iText" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<field name="iValue" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<field name="iLocale" class="org.joda.time.format.DateTimeParserBucket$SavedField" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="int parse(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="int scan(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="void printTo(java.io.Writer,int)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="void &lt;init&gt;(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="void printTo(java.lang.StringBuffer,int)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<method signature="int calculatePrintedLength(int)" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<field name="iLeft" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<field name="iRight" class="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix" />
	<class name="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<method signature="boolean restoreState(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<method signature="void &lt;init&gt;(org.joda.time.format.DateTimeParserBucket)" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<field name="iSavedFields" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<field name="iSavedFieldsCount" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<field name="this$0" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<field name="iZone" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<field name="iOffset" class="org.joda.time.format.DateTimeParserBucket$SavedState" />
	<class name="org.joda.time.convert.StringConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.StringConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.StringConverter" />
	<method signature="int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)" class="org.joda.time.convert.StringConverter" />
	<method signature="void setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.StringConverter" />
	<method signature="long getDurationMillis(java.lang.Object)" class="org.joda.time.convert.StringConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.StringConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.StringConverter" />
	<method signature="void setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.StringConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.StringConverter" />
	<field name="class$java$lang$String" class="org.joda.time.convert.StringConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.StringConverter" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.DateTimeZone readFrom(java.io.DataInput,java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="long readMillis(java.io.DataInput)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$RuleSet getLastRuleSet()" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="void writeMillis(java.io.DataOutput,long)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.DateTimeZone buildFixedZone(java.lang.String,java.lang.String,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="void writeTo(java.lang.String,java.io.DataOutput)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder addCutover(int,char,int,int,int,boolean,int)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="boolean addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder setStandardOffset(int)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="void writeTo(java.lang.String,java.io.OutputStream)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder setFixedSavings(java.lang.String,int)" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<field name="iRuleSets" class="org.joda.time.tz.DateTimeZoneBuilder" />
	<class name="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<method signature="org.joda.time.DurationField getField(org.joda.time.Chronology)" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<method signature="void &lt;init&gt;(java.lang.String,byte)" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<field name="iOrdinal" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<field name="serialVersionUID" class="org.joda.time.DurationFieldType$StandardDurationFieldType" />
	<class name="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="long next(long,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="int getFromYear()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="java.lang.String getNameKey()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="int getToYear()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="int getSaveMillis()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="void &lt;init&gt;(org.joda.time.tz.DateTimeZoneBuilder$Recurrence,int,int)" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<method signature="org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear()" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<field name="iRecurrence" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<field name="iFromYear" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<field name="iToYear" class="org.joda.time.tz.DateTimeZoneBuilder$Rule" />
	<class name="org.joda.time.DateTimeZone$1" />
	<method signature="java.lang.String toString()" class="org.joda.time.DateTimeZone$1" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.DateTimeZone$1" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.DateTimeZone$1" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.DateTimeZone$1" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.DateTimeZone$1" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.DateTimeZone$1" />
	<class name="org.joda.time.convert.ConverterSet$Entry" />
	<method signature="void &lt;init&gt;(java.lang.Class,org.joda.time.convert.Converter)" class="org.joda.time.convert.ConverterSet$Entry" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.ConverterSet$Entry" />
	<field name="iConverter" class="org.joda.time.convert.ConverterSet$Entry" />
	<field name="iType" class="org.joda.time.convert.ConverterSet$Entry" />
	<class name="org.joda.time.chrono.ISOChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.chrono.ISOChronology" />
	<method signature="org.joda.time.chrono.ISOChronology getInstanceUTC()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="org.joda.time.chrono.ISOChronology getInstance()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.ISOChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ISOChronology" />
	<method signature="java.lang.Object writeReplace()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.ISOChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.ISOChronology" />
	<method signature="org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.ISOChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.ISOChronology" />
	<field name="cCache" class="org.joda.time.chrono.ISOChronology" />
	<field name="INSTANCE_UTC" class="org.joda.time.chrono.ISOChronology" />
	<field name="cFastCache" class="org.joda.time.chrono.ISOChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.ISOChronology" />
	<field name="FAST_CACHE_SIZE" class="org.joda.time.chrono.ISOChronology" />
	<class name="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<field name="WEEK_53" class="org.joda.time.chrono.BasicWeekyearDateTimeField" />
	<class name="org.joda.time.field.StrictDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField)" class="org.joda.time.field.StrictDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.StrictDateTimeField" />
	<method signature="org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField)" class="org.joda.time.field.StrictDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.StrictDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.StrictDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.StrictDateTimeField" />
	<class name="org.joda.time.Hours" />
	<method signature="org.joda.time.Weeks toStandardWeeks()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours dividedBy(int)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours minus(org.joda.time.Hours)" class="org.joda.time.Hours" />
	<method signature="java.lang.String toString()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours plus(org.joda.time.Hours)" class="org.joda.time.Hours" />
	<method signature="boolean isGreaterThan(org.joda.time.Hours)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Hours" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours minus(int)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours plus(int)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours hours(int)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours parseHours(java.lang.String)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours multipliedBy(int)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours hoursBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours negated()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Minutes toStandardMinutes()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours hoursIn(org.joda.time.ReadableInterval)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Hours" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Hours" />
	<method signature="boolean isLessThan(org.joda.time.Hours)" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Hours" />
	<method signature="int getHours()" class="org.joda.time.Hours" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Days toStandardDays()" class="org.joda.time.Hours" />
	<method signature="org.joda.time.Hours standardHoursIn(org.joda.time.ReadablePeriod)" class="org.joda.time.Hours" />
	<field name="FOUR" class="org.joda.time.Hours" />
	<field name="FIVE" class="org.joda.time.Hours" />
	<field name="SEVEN" class="org.joda.time.Hours" />
	<field name="ONE" class="org.joda.time.Hours" />
	<field name="MAX_VALUE" class="org.joda.time.Hours" />
	<field name="TWO" class="org.joda.time.Hours" />
	<field name="THREE" class="org.joda.time.Hours" />
	<field name="SIX" class="org.joda.time.Hours" />
	<field name="PARSER" class="org.joda.time.Hours" />
	<field name="serialVersionUID" class="org.joda.time.Hours" />
	<field name="MIN_VALUE" class="org.joda.time.Hours" />
	<field name="ZERO" class="org.joda.time.Hours" />
	<field name="EIGHT" class="org.joda.time.Hours" />
	<class name="org.joda.time.ReadWritableInterval" />
	<method signature="void setChronology(org.joda.time.Chronology)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setStartMillis(long)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setInterval(org.joda.time.ReadableInterval)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setDurationAfterStart(org.joda.time.ReadableDuration)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setEnd(org.joda.time.ReadableInstant)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setInterval(long,long)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setEndMillis(long)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setStart(org.joda.time.ReadableInstant)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setPeriodBeforeEnd(org.joda.time.ReadablePeriod)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setDurationBeforeEnd(org.joda.time.ReadableDuration)" class="org.joda.time.ReadWritableInterval" />
	<method signature="void setPeriodAfterStart(org.joda.time.ReadablePeriod)" class="org.joda.time.ReadWritableInterval" />
	<class name="org.joda.time.convert.CalendarConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.DateTimeZone)" class="org.joda.time.convert.CalendarConverter" />
	<method signature="org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.CalendarConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.CalendarConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.CalendarConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.CalendarConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.CalendarConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.CalendarConverter" />
	<field name="class$java$util$Calendar" class="org.joda.time.convert.CalendarConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.CalendarConverter" />
	<class name="org.joda.time.convert.IntervalConverter" />
	<method signature="boolean isReadableInterval(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.IntervalConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.IntervalConverter" />
	<method signature="void setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.IntervalConverter" />
	<class name="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="int parse(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="int scan(java.lang.String,int)" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="void printTo(java.io.Writer,int)" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="void printTo(java.lang.StringBuffer,int)" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<method signature="int calculatePrintedLength(int)" class="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix" />
	<class name="org.joda.time.convert.DateConverter" />
	<method signature="java.lang.Class class$(java.lang.String)" class="org.joda.time.convert.DateConverter" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.convert.DateConverter" />
	<method signature="java.lang.Class getSupportedType()" class="org.joda.time.convert.DateConverter" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.convert.DateConverter" />
	<method signature="long getInstantMillis(java.lang.Object,org.joda.time.Chronology)" class="org.joda.time.convert.DateConverter" />
	<field name="INSTANCE" class="org.joda.time.convert.DateConverter" />
	<field name="class$java$util$Date" class="org.joda.time.convert.DateConverter" />
	<class name="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long getDurationUnitMillis()" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,long)" class="org.joda.time.field.ImpreciseDateTimeField" />
	<field name="iDurationField" class="org.joda.time.field.ImpreciseDateTimeField" />
	<field name="iUnitMillis" class="org.joda.time.field.ImpreciseDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.ImpreciseDateTimeField" />
	<class name="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMaximumValueForSet(long,int)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField" />
	<class name="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay setCopy(int)" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay addWrapFieldToCopy(int)" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay setCopy(java.lang.String,java.util.Locale)" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay setCopy(java.lang.String)" class="org.joda.time.YearMonthDay$Property" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay getYearMonthDay()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.DateTimeField getField()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.ReadablePartial getReadablePartial()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="int get()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay withMaximumValue()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="void &lt;init&gt;(org.joda.time.YearMonthDay,int)" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay withMinimumValue()" class="org.joda.time.YearMonthDay$Property" />
	<method signature="org.joda.time.YearMonthDay addToCopy(int)" class="org.joda.time.YearMonthDay$Property" />
	<field name="iFieldIndex" class="org.joda.time.YearMonthDay$Property" />
	<field name="serialVersionUID" class="org.joda.time.YearMonthDay$Property" />
	<field name="iYearMonthDay" class="org.joda.time.YearMonthDay$Property" />
	<class name="org.joda.time.chrono.BaseChronology" />
	<method signature="long add(org.joda.time.ReadablePeriod,long,int)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField years()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField secondOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField hours()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField millisOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField yearOfEra()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField minuteOfHour()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField millis()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="long set(org.joda.time.ReadablePartial,long)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField dayOfMonth()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField hourOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField eras()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField monthOfYear()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField year()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField hourOfHalfday()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField halfdayOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeZone getZone()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField weekOfWeekyear()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField weekyears()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField secondOfMinute()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField weekyearOfCentury()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="int[] get(org.joda.time.ReadablePartial,long)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int,int,int,int)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField months()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField seconds()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField dayOfYear()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField days()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField minutes()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="long getDateTimeMillis(long,int,int,int,int)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField weekyear()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField millisOfSecond()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="int[] get(org.joda.time.ReadablePeriod,long)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField weeks()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="long getDateTimeMillis(int,int,int,int)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField centuryOfEra()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField era()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="int[] get(org.joda.time.ReadablePeriod,long,long)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField halfdays()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DurationField centuries()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField minuteOfDay()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="long add(long,long,int)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField clockhourOfHalfday()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField yearOfCentury()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.BaseChronology" />
	<method signature="org.joda.time.DateTimeField dayOfWeek()" class="org.joda.time.chrono.BaseChronology" />
	<method signature="void validate(org.joda.time.ReadablePartial,int[])" class="org.joda.time.chrono.BaseChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BaseChronology" />
	<class name="org.joda.time.chrono.StrictChronology" />
	<method signature="org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="java.lang.String toString()" class="org.joda.time.chrono.StrictChronology" />
	<method signature="void assemble(org.joda.time.chrono.AssembledChronology$Fields)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.StrictChronology" />
	<method signature="int hashCode()" class="org.joda.time.chrono.StrictChronology" />
	<method signature="boolean equals(java.lang.Object)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)" class="org.joda.time.chrono.StrictChronology" />
	<method signature="org.joda.time.Chronology withUTC()" class="org.joda.time.chrono.StrictChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.StrictChronology" />
	<field name="iWithUTC" class="org.joda.time.chrono.StrictChronology" />
	<class name="org.joda.time.tz.NameProvider" />
	<method signature="java.lang.String getName(java.util.Locale,java.lang.String,java.lang.String)" class="org.joda.time.tz.NameProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.NameProvider" />
	<method signature="java.lang.String getShortName(java.util.Locale,java.lang.String,java.lang.String)" class="org.joda.time.tz.NameProvider" />
	<class name="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int monthOfYearTextToValue(java.lang.String)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getDayOfWeekMaxTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String monthOfYearValueToShortText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getDayOfWeekMaxShortTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getMonthMaxTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="void &lt;init&gt;(java.util.Locale)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int maxLength(java.lang.String[])" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int dayOfWeekTextToValue(java.lang.String)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String dayOfWeekValueToText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String eraValueToText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String monthOfYearValueToText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getEraMaxTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="void addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getHalfdayMaxTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String dayOfWeekValueToShortText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String halfdayValueToText(int)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int eraTextToValue(java.lang.String)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int getMonthMaxShortTextLength()" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String[] realignMonths(java.lang.String[])" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="java.lang.String[] realignDaysOfWeek(java.lang.String[])" class="org.joda.time.chrono.GJLocaleSymbols" />
	<method signature="int halfdayTextToValue(java.lang.String)" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMonths" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxShortDayOfWeekLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="cCache" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxShortMonthLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iEras" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxEraLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iHalfday" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iDaysOfWeek" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxHalfdayLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iShortDaysOfWeek" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxDayOfWeekLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="FAST_CACHE_SIZE" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iParseMonths" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iParseEras" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iParseDaysOfWeek" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="cFastCache" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iMaxMonthLength" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iLocale" class="org.joda.time.chrono.GJLocaleSymbols" />
	<field name="iShortMonths" class="org.joda.time.chrono.GJLocaleSymbols" />
	<class name="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.chrono.BasicChronology)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<field name="iChronology" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicYearDateTimeField" />
	<class name="org.joda.time.field.OffsetDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="int getOffset()" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.OffsetDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.OffsetDateTimeField" />
	<field name="iMin" class="org.joda.time.field.OffsetDateTimeField" />
	<field name="iMax" class="org.joda.time.field.OffsetDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.OffsetDateTimeField" />
	<field name="iOffset" class="org.joda.time.field.OffsetDateTimeField" />
	<class name="org.joda.time.Minutes" />
	<method signature="org.joda.time.Weeks toStandardWeeks()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes dividedBy(int)" class="org.joda.time.Minutes" />
	<method signature="java.lang.String toString()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes negated()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Hours toStandardHours()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes standardMinutesIn(org.joda.time.ReadablePeriod)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.DurationFieldType getFieldType()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minutesIn(org.joda.time.ReadableInterval)" class="org.joda.time.Minutes" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.PeriodType getPeriodType()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minutes(int)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minus(int)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes plus(int)" class="org.joda.time.Minutes" />
	<method signature="boolean isGreaterThan(org.joda.time.Minutes)" class="org.joda.time.Minutes" />
	<method signature="int getMinutes()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes multipliedBy(int)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes parseMinutes(java.lang.String)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Duration toStandardDuration()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minutesBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" class="org.joda.time.Minutes" />
	<method signature="void &lt;init&gt;(int)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes minus(org.joda.time.Minutes)" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Seconds toStandardSeconds()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Minutes plus(org.joda.time.Minutes)" class="org.joda.time.Minutes" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.Minutes" />
	<method signature="org.joda.time.Days toStandardDays()" class="org.joda.time.Minutes" />
	<method signature="boolean isLessThan(org.joda.time.Minutes)" class="org.joda.time.Minutes" />
	<field name="MAX_VALUE" class="org.joda.time.Minutes" />
	<field name="ONE" class="org.joda.time.Minutes" />
	<field name="TWO" class="org.joda.time.Minutes" />
	<field name="THREE" class="org.joda.time.Minutes" />
	<field name="serialVersionUID" class="org.joda.time.Minutes" />
	<field name="PARSER" class="org.joda.time.Minutes" />
	<field name="MIN_VALUE" class="org.joda.time.Minutes" />
	<field name="ZERO" class="org.joda.time.Minutes" />
	<class name="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="org.joda.time.field.UnsupportedDateTimeField getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long add(long,long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int[] addWrapField(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getName()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int[] addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="org.joda.time.DurationField getDurationField()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long set(long,java.lang.String,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial,int[])" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getLeapAmount(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long addWrapField(long,int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long roundFloor(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long set(long,java.lang.String)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long getDifferenceAsLong(long,long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long roundCeiling(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long roundHalfCeiling(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int get(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String toString()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long add(long,int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsShortText(int,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsShortText(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long set(long,int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getDifference(long,long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsText(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsText(int,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumTextLength(java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMinimumValue(org.joda.time.ReadablePartial)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumShortTextLength(java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="boolean isSupported()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="boolean isLenient()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="boolean isLeap(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int[] set(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="org.joda.time.DurationField getRangeDurationField()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long roundHalfFloor(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumValue(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long roundHalfEven(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsText(long,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.UnsupportedOperationException unsupported()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMinimumValue()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int[] add(org.joda.time.ReadablePartial,int,int[],int)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="org.joda.time.DateTimeFieldType getType()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsShortText(long,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMaximumValue()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="long remainder(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="org.joda.time.DurationField getLeapDurationField()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<method signature="int getMinimumValue(long)" class="org.joda.time.field.UnsupportedDateTimeField" />
	<field name="iDurationField" class="org.joda.time.field.UnsupportedDateTimeField" />
	<field name="cCache" class="org.joda.time.field.UnsupportedDateTimeField" />
	<field name="iType" class="org.joda.time.field.UnsupportedDateTimeField" />
	<field name="serialVersionUID" class="org.joda.time.field.UnsupportedDateTimeField" />
	<class name="org.joda.time.chrono.BasicGJChronology" />
	<method signature="int getDaysInYearMonth(int,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="int getMonthOfYear(long,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="long getTotalMillisByYearMonth(int,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="int getDaysInMonthMax(int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,java.lang.Object,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="int getDaysInMonthMaxForSet(long,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="long setYear(long,int)" class="org.joda.time.chrono.BasicGJChronology" />
	<method signature="long getYearDifference(long,long)" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="MIN_DAYS_PER_MONTH_ARRAY" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="MIN_TOTAL_MILLIS_BY_MONTH_ARRAY" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="MAX_DAYS_PER_MONTH_ARRAY" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="serialVersionUID" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="FEB_29" class="org.joda.time.chrono.BasicGJChronology" />
	<field name="MAX_TOTAL_MILLIS_BY_MONTH_ARRAY" class="org.joda.time.chrono.BasicGJChronology" />
	<class name="org.joda.time.Partial" />
	<method signature="boolean isMatch(org.joda.time.ReadablePartial)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial withField(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.Partial" />
	<method signature="java.lang.String toString()" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType[],int[])" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial$Property property(org.joda.time.DateTimeFieldType)" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.ReadablePartial)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial without(org.joda.time.DateTimeFieldType)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial with(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.Partial" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" class="org.joda.time.Partial" />
	<method signature="boolean isMatch(org.joda.time.ReadableInstant)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.DateTimeField getField(int,org.joda.time.Chronology)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Chronology getChronology()" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial withPeriodAdded(org.joda.time.ReadablePeriod,int)" class="org.joda.time.Partial" />
	<method signature="java.lang.String toString(java.lang.String,java.util.Locale)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial plus(org.joda.time.ReadablePeriod)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial minus(org.joda.time.ReadablePeriod)" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int)" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology)" class="org.joda.time.Partial" />
	<method signature="int size()" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial withFieldAddWrapped(org.joda.time.DurationFieldType,int)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.format.DateTimeFormatter getFormatter()" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial withFieldAdded(org.joda.time.DurationFieldType,int)" class="org.joda.time.Partial" />
	<method signature="org.joda.time.Partial withChronologyRetainFields(org.joda.time.Chronology)" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.Chronology,org.joda.time.DateTimeFieldType[],int[])" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;(org.joda.time.Partial,int[])" class="org.joda.time.Partial" />
	<method signature="org.joda.time.DateTimeFieldType[] getFieldTypes()" class="org.joda.time.Partial" />
	<method signature="int[] getValues()" class="org.joda.time.Partial" />
	<method signature="int getValue(int)" class="org.joda.time.Partial" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.joda.time.Partial" />
	<method signature="java.lang.String toStringList()" class="org.joda.time.Partial" />
	<method signature="void &lt;init&gt;()" class="org.joda.time.Partial" />
	<method signature="org.joda.time.DateTimeFieldType getFieldType(int)" class="org.joda.time.Partial" />
	<field name="iValues" class="org.joda.time.Partial" />
	<field name="iTypes" class="org.joda.time.Partial" />
	<field name="iChronology" class="org.joda.time.Partial" />
	<field name="iFormatter" class="org.joda.time.Partial" />
	<field name="serialVersionUID" class="org.joda.time.Partial" />
	<class name="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<method signature="java.lang.Object readResolve()" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<method signature="boolean isLeapYear(int)" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<method signature="void &lt;init&gt;(int,int)" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<field name="index" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<field name="pattern" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<field name="serialVersionUID" class="org.joda.time.chrono.IslamicChronology$LeapYearPatternType" />
	<class name="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="java.util.Map loadZoneInfoMap(java.io.InputStream)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void uncaughtException(java.lang.Exception)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="java.util.Set getAvailableIDs()" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void &lt;clinit&gt;()" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.ClassLoader,boolean)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void readZoneInfoMap(java.io.DataInputStream,java.util.Map)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.ClassLoader)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="java.io.InputStream openResource(java.lang.String)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="org.joda.time.DateTimeZone loadZoneData(java.lang.String)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="org.joda.time.DateTimeZone getZone(java.lang.String)" class="org.joda.time.tz.ZoneInfoProvider" />
	<method signature="void &lt;init&gt;(java.io.File)" class="org.joda.time.tz.ZoneInfoProvider" />
	<field name="iResourcePath" class="org.joda.time.tz.ZoneInfoProvider" />
	<field name="iZoneInfoMap" class="org.joda.time.tz.ZoneInfoProvider" />
	<field name="iLoader" class="org.joda.time.tz.ZoneInfoProvider" />
	<field name="iFileDir" class="org.joda.time.tz.ZoneInfoProvider" />
</entrypoints>

<!-- writing shrinked C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar to C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar.tmp. -->
<inOutPair in="C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar" out="C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar.tmp">
	<removed-code>
	</removed-code>
	<removed-resources>
	</removed-resources>
<!-- 	shrinked C:\Documents and Settings\Alex.ABT.000\workspace\StockPortfolio\lib\joda-time-1.6.jar BY -6,64 %. -->
<!-- 	size before: 479 KB, size after: 511 KB. -->
<!-- 	removed 0 classes, 0 methods, 0 fields, 0 resources. -->
<!-- 	222 classes remaining of 222 total. -->
</inOutPair>
</yshrink>

